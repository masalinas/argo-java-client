/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Inputs;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1MemoizationStatus;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1NodeFlag;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Outputs;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1TemplateRef;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * NodeStatus contains status information about an individual node in the workflow
 */
@ApiModel(description = "NodeStatus contains status information about an individual node in the workflow")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojWorkflowV1alpha1NodeStatus {
  @SerializedName("boundaryID")
  private String boundaryID = null;

  @SerializedName("children")
  private List<String> children = null;

  @SerializedName("daemoned")
  private Boolean daemoned = null;

  @SerializedName("displayName")
  private String displayName = null;

  @SerializedName("estimatedDuration")
  private Integer estimatedDuration = null;

  @SerializedName("finishedAt")
  private String finishedAt = null;

  @SerializedName("hostNodeName")
  private String hostNodeName = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("inputs")
  private IoArgoprojWorkflowV1alpha1Inputs inputs = null;

  @SerializedName("memoizationStatus")
  private IoArgoprojWorkflowV1alpha1MemoizationStatus memoizationStatus = null;

  @SerializedName("message")
  private String message = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nodeFlag")
  private IoArgoprojWorkflowV1alpha1NodeFlag nodeFlag = null;

  @SerializedName("outboundNodes")
  private List<String> outboundNodes = null;

  @SerializedName("outputs")
  private IoArgoprojWorkflowV1alpha1Outputs outputs = null;

  @SerializedName("phase")
  private String phase = null;

  @SerializedName("podIP")
  private String podIP = null;

  @SerializedName("progress")
  private String progress = null;

  @SerializedName("resourcesDuration")
  private Map<String, Long> resourcesDuration = null;

  @SerializedName("startedAt")
  private String startedAt = null;

  @SerializedName("synchronizationStatus")
  private IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus synchronizationStatus = null;

  @SerializedName("templateName")
  private String templateName = null;

  @SerializedName("templateRef")
  private IoArgoprojWorkflowV1alpha1TemplateRef templateRef = null;

  @SerializedName("templateScope")
  private String templateScope = null;

  @SerializedName("type")
  private String type = null;

  public IoArgoprojWorkflowV1alpha1NodeStatus boundaryID(String boundaryID) {
    this.boundaryID = boundaryID;
    return this;
  }

   /**
   * BoundaryID indicates the node ID of the associated template root node in which this node belongs to
   * @return boundaryID
  **/
  @ApiModelProperty(value = "BoundaryID indicates the node ID of the associated template root node in which this node belongs to")
  public String getBoundaryID() {
    return boundaryID;
  }

  public void setBoundaryID(String boundaryID) {
    this.boundaryID = boundaryID;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus children(List<String> children) {
    this.children = children;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus addChildrenItem(String childrenItem) {
    if (this.children == null) {
      this.children = new ArrayList<String>();
    }
    this.children.add(childrenItem);
    return this;
  }

   /**
   * Children is a list of child node IDs
   * @return children
  **/
  @ApiModelProperty(value = "Children is a list of child node IDs")
  public List<String> getChildren() {
    return children;
  }

  public void setChildren(List<String> children) {
    this.children = children;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus daemoned(Boolean daemoned) {
    this.daemoned = daemoned;
    return this;
  }

   /**
   * Daemoned tracks whether or not this node was daemoned and need to be terminated
   * @return daemoned
  **/
  @ApiModelProperty(value = "Daemoned tracks whether or not this node was daemoned and need to be terminated")
  public Boolean isDaemoned() {
    return daemoned;
  }

  public void setDaemoned(Boolean daemoned) {
    this.daemoned = daemoned;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

   /**
   * DisplayName is a human readable representation of the node. Unique within a template boundary
   * @return displayName
  **/
  @ApiModelProperty(value = "DisplayName is a human readable representation of the node. Unique within a template boundary")
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus estimatedDuration(Integer estimatedDuration) {
    this.estimatedDuration = estimatedDuration;
    return this;
  }

   /**
   * EstimatedDuration in seconds.
   * @return estimatedDuration
  **/
  @ApiModelProperty(value = "EstimatedDuration in seconds.")
  public Integer getEstimatedDuration() {
    return estimatedDuration;
  }

  public void setEstimatedDuration(Integer estimatedDuration) {
    this.estimatedDuration = estimatedDuration;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus finishedAt(String finishedAt) {
    this.finishedAt = finishedAt;
    return this;
  }

   /**
   * Time at which this node completed
   * @return finishedAt
  **/
  @ApiModelProperty(value = "Time at which this node completed")
  public String getFinishedAt() {
    return finishedAt;
  }

  public void setFinishedAt(String finishedAt) {
    this.finishedAt = finishedAt;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus hostNodeName(String hostNodeName) {
    this.hostNodeName = hostNodeName;
    return this;
  }

   /**
   * HostNodeName name of the Kubernetes node on which the Pod is running, if applicable
   * @return hostNodeName
  **/
  @ApiModelProperty(value = "HostNodeName name of the Kubernetes node on which the Pod is running, if applicable")
  public String getHostNodeName() {
    return hostNodeName;
  }

  public void setHostNodeName(String hostNodeName) {
    this.hostNodeName = hostNodeName;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus id(String id) {
    this.id = id;
    return this;
  }

   /**
   * ID is a unique identifier of a node within the worklow It is implemented as a hash of the node name, which makes the ID deterministic
   * @return id
  **/
  @ApiModelProperty(required = true, value = "ID is a unique identifier of a node within the worklow It is implemented as a hash of the node name, which makes the ID deterministic")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus inputs(IoArgoprojWorkflowV1alpha1Inputs inputs) {
    this.inputs = inputs;
    return this;
  }

   /**
   * Inputs captures input parameter values and artifact locations supplied to this template invocation
   * @return inputs
  **/
  @ApiModelProperty(value = "Inputs captures input parameter values and artifact locations supplied to this template invocation")
  public IoArgoprojWorkflowV1alpha1Inputs getInputs() {
    return inputs;
  }

  public void setInputs(IoArgoprojWorkflowV1alpha1Inputs inputs) {
    this.inputs = inputs;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus memoizationStatus(IoArgoprojWorkflowV1alpha1MemoizationStatus memoizationStatus) {
    this.memoizationStatus = memoizationStatus;
    return this;
  }

   /**
   * MemoizationStatus holds information about cached nodes
   * @return memoizationStatus
  **/
  @ApiModelProperty(value = "MemoizationStatus holds information about cached nodes")
  public IoArgoprojWorkflowV1alpha1MemoizationStatus getMemoizationStatus() {
    return memoizationStatus;
  }

  public void setMemoizationStatus(IoArgoprojWorkflowV1alpha1MemoizationStatus memoizationStatus) {
    this.memoizationStatus = memoizationStatus;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus message(String message) {
    this.message = message;
    return this;
  }

   /**
   * A human readable message indicating details about why the node is in this condition.
   * @return message
  **/
  @ApiModelProperty(value = "A human readable message indicating details about why the node is in this condition.")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name is unique name in the node tree used to generate the node ID
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name is unique name in the node tree used to generate the node ID")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus nodeFlag(IoArgoprojWorkflowV1alpha1NodeFlag nodeFlag) {
    this.nodeFlag = nodeFlag;
    return this;
  }

   /**
   * NodeFlag tracks some history of node. e.g.) hooked, retried, etc.
   * @return nodeFlag
  **/
  @ApiModelProperty(value = "NodeFlag tracks some history of node. e.g.) hooked, retried, etc.")
  public IoArgoprojWorkflowV1alpha1NodeFlag getNodeFlag() {
    return nodeFlag;
  }

  public void setNodeFlag(IoArgoprojWorkflowV1alpha1NodeFlag nodeFlag) {
    this.nodeFlag = nodeFlag;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus outboundNodes(List<String> outboundNodes) {
    this.outboundNodes = outboundNodes;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus addOutboundNodesItem(String outboundNodesItem) {
    if (this.outboundNodes == null) {
      this.outboundNodes = new ArrayList<String>();
    }
    this.outboundNodes.add(outboundNodesItem);
    return this;
  }

   /**
   * OutboundNodes tracks the node IDs which are considered \&quot;outbound\&quot; nodes to a template invocation. For every invocation of a template, there are nodes which we considered as \&quot;outbound\&quot;. Essentially, these are last nodes in the execution sequence to run, before the template is considered completed. These nodes are then connected as parents to a following step.  In the case of single pod steps (i.e. container, script, resource templates), this list will be nil since the pod itself is already considered the \&quot;outbound\&quot; node. In the case of DAGs, outbound nodes are the \&quot;target\&quot; tasks (tasks with no children). In the case of steps, outbound nodes are all the containers involved in the last step group. NOTE: since templates are composable, the list of outbound nodes are carried upwards when a DAG/steps template invokes another DAG/steps template. In other words, the outbound nodes of a template, will be a superset of the outbound nodes of its last children.
   * @return outboundNodes
  **/
  @ApiModelProperty(value = "OutboundNodes tracks the node IDs which are considered \"outbound\" nodes to a template invocation. For every invocation of a template, there are nodes which we considered as \"outbound\". Essentially, these are last nodes in the execution sequence to run, before the template is considered completed. These nodes are then connected as parents to a following step.  In the case of single pod steps (i.e. container, script, resource templates), this list will be nil since the pod itself is already considered the \"outbound\" node. In the case of DAGs, outbound nodes are the \"target\" tasks (tasks with no children). In the case of steps, outbound nodes are all the containers involved in the last step group. NOTE: since templates are composable, the list of outbound nodes are carried upwards when a DAG/steps template invokes another DAG/steps template. In other words, the outbound nodes of a template, will be a superset of the outbound nodes of its last children.")
  public List<String> getOutboundNodes() {
    return outboundNodes;
  }

  public void setOutboundNodes(List<String> outboundNodes) {
    this.outboundNodes = outboundNodes;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus outputs(IoArgoprojWorkflowV1alpha1Outputs outputs) {
    this.outputs = outputs;
    return this;
  }

   /**
   * Outputs captures output parameter values and artifact locations produced by this template invocation
   * @return outputs
  **/
  @ApiModelProperty(value = "Outputs captures output parameter values and artifact locations produced by this template invocation")
  public IoArgoprojWorkflowV1alpha1Outputs getOutputs() {
    return outputs;
  }

  public void setOutputs(IoArgoprojWorkflowV1alpha1Outputs outputs) {
    this.outputs = outputs;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus phase(String phase) {
    this.phase = phase;
    return this;
  }

   /**
   * Phase a simple, high-level summary of where the node is in its lifecycle. Can be used as a state machine. Will be one of these values \&quot;Pending\&quot;, \&quot;Running\&quot; before the node is completed, or \&quot;Succeeded\&quot;, \&quot;Skipped\&quot;, \&quot;Failed\&quot;, \&quot;Error\&quot;, or \&quot;Omitted\&quot; as a final state.
   * @return phase
  **/
  @ApiModelProperty(value = "Phase a simple, high-level summary of where the node is in its lifecycle. Can be used as a state machine. Will be one of these values \"Pending\", \"Running\" before the node is completed, or \"Succeeded\", \"Skipped\", \"Failed\", \"Error\", or \"Omitted\" as a final state.")
  public String getPhase() {
    return phase;
  }

  public void setPhase(String phase) {
    this.phase = phase;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus podIP(String podIP) {
    this.podIP = podIP;
    return this;
  }

   /**
   * PodIP captures the IP of the pod for daemoned steps
   * @return podIP
  **/
  @ApiModelProperty(value = "PodIP captures the IP of the pod for daemoned steps")
  public String getPodIP() {
    return podIP;
  }

  public void setPodIP(String podIP) {
    this.podIP = podIP;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus progress(String progress) {
    this.progress = progress;
    return this;
  }

   /**
   * Progress to completion
   * @return progress
  **/
  @ApiModelProperty(value = "Progress to completion")
  public String getProgress() {
    return progress;
  }

  public void setProgress(String progress) {
    this.progress = progress;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus resourcesDuration(Map<String, Long> resourcesDuration) {
    this.resourcesDuration = resourcesDuration;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus putResourcesDurationItem(String key, Long resourcesDurationItem) {
    if (this.resourcesDuration == null) {
      this.resourcesDuration = new HashMap<String, Long>();
    }
    this.resourcesDuration.put(key, resourcesDurationItem);
    return this;
  }

   /**
   * ResourcesDuration is indicative, but not accurate, resource duration. This is populated when the nodes completes.
   * @return resourcesDuration
  **/
  @ApiModelProperty(value = "ResourcesDuration is indicative, but not accurate, resource duration. This is populated when the nodes completes.")
  public Map<String, Long> getResourcesDuration() {
    return resourcesDuration;
  }

  public void setResourcesDuration(Map<String, Long> resourcesDuration) {
    this.resourcesDuration = resourcesDuration;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus startedAt(String startedAt) {
    this.startedAt = startedAt;
    return this;
  }

   /**
   * Time at which this node started
   * @return startedAt
  **/
  @ApiModelProperty(value = "Time at which this node started")
  public String getStartedAt() {
    return startedAt;
  }

  public void setStartedAt(String startedAt) {
    this.startedAt = startedAt;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus synchronizationStatus(IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus synchronizationStatus) {
    this.synchronizationStatus = synchronizationStatus;
    return this;
  }

   /**
   * SynchronizationStatus is the synchronization status of the node
   * @return synchronizationStatus
  **/
  @ApiModelProperty(value = "SynchronizationStatus is the synchronization status of the node")
  public IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus getSynchronizationStatus() {
    return synchronizationStatus;
  }

  public void setSynchronizationStatus(IoArgoprojWorkflowV1alpha1NodeSynchronizationStatus synchronizationStatus) {
    this.synchronizationStatus = synchronizationStatus;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus templateName(String templateName) {
    this.templateName = templateName;
    return this;
  }

   /**
   * TemplateName is the template name which this node corresponds to. Not applicable to virtual nodes (e.g. Retry, StepGroup)
   * @return templateName
  **/
  @ApiModelProperty(value = "TemplateName is the template name which this node corresponds to. Not applicable to virtual nodes (e.g. Retry, StepGroup)")
  public String getTemplateName() {
    return templateName;
  }

  public void setTemplateName(String templateName) {
    this.templateName = templateName;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus templateRef(IoArgoprojWorkflowV1alpha1TemplateRef templateRef) {
    this.templateRef = templateRef;
    return this;
  }

   /**
   * TemplateRef is the reference to the template resource which this node corresponds to. Not applicable to virtual nodes (e.g. Retry, StepGroup)
   * @return templateRef
  **/
  @ApiModelProperty(value = "TemplateRef is the reference to the template resource which this node corresponds to. Not applicable to virtual nodes (e.g. Retry, StepGroup)")
  public IoArgoprojWorkflowV1alpha1TemplateRef getTemplateRef() {
    return templateRef;
  }

  public void setTemplateRef(IoArgoprojWorkflowV1alpha1TemplateRef templateRef) {
    this.templateRef = templateRef;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus templateScope(String templateScope) {
    this.templateScope = templateScope;
    return this;
  }

   /**
   * TemplateScope is the template scope in which the template of this node was retrieved.
   * @return templateScope
  **/
  @ApiModelProperty(value = "TemplateScope is the template scope in which the template of this node was retrieved.")
  public String getTemplateScope() {
    return templateScope;
  }

  public void setTemplateScope(String templateScope) {
    this.templateScope = templateScope;
  }

  public IoArgoprojWorkflowV1alpha1NodeStatus type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Type indicates type of node
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Type indicates type of node")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1NodeStatus ioArgoprojWorkflowV1alpha1NodeStatus = (IoArgoprojWorkflowV1alpha1NodeStatus) o;
    return Objects.equals(this.boundaryID, ioArgoprojWorkflowV1alpha1NodeStatus.boundaryID) &&
        Objects.equals(this.children, ioArgoprojWorkflowV1alpha1NodeStatus.children) &&
        Objects.equals(this.daemoned, ioArgoprojWorkflowV1alpha1NodeStatus.daemoned) &&
        Objects.equals(this.displayName, ioArgoprojWorkflowV1alpha1NodeStatus.displayName) &&
        Objects.equals(this.estimatedDuration, ioArgoprojWorkflowV1alpha1NodeStatus.estimatedDuration) &&
        Objects.equals(this.finishedAt, ioArgoprojWorkflowV1alpha1NodeStatus.finishedAt) &&
        Objects.equals(this.hostNodeName, ioArgoprojWorkflowV1alpha1NodeStatus.hostNodeName) &&
        Objects.equals(this.id, ioArgoprojWorkflowV1alpha1NodeStatus.id) &&
        Objects.equals(this.inputs, ioArgoprojWorkflowV1alpha1NodeStatus.inputs) &&
        Objects.equals(this.memoizationStatus, ioArgoprojWorkflowV1alpha1NodeStatus.memoizationStatus) &&
        Objects.equals(this.message, ioArgoprojWorkflowV1alpha1NodeStatus.message) &&
        Objects.equals(this.name, ioArgoprojWorkflowV1alpha1NodeStatus.name) &&
        Objects.equals(this.nodeFlag, ioArgoprojWorkflowV1alpha1NodeStatus.nodeFlag) &&
        Objects.equals(this.outboundNodes, ioArgoprojWorkflowV1alpha1NodeStatus.outboundNodes) &&
        Objects.equals(this.outputs, ioArgoprojWorkflowV1alpha1NodeStatus.outputs) &&
        Objects.equals(this.phase, ioArgoprojWorkflowV1alpha1NodeStatus.phase) &&
        Objects.equals(this.podIP, ioArgoprojWorkflowV1alpha1NodeStatus.podIP) &&
        Objects.equals(this.progress, ioArgoprojWorkflowV1alpha1NodeStatus.progress) &&
        Objects.equals(this.resourcesDuration, ioArgoprojWorkflowV1alpha1NodeStatus.resourcesDuration) &&
        Objects.equals(this.startedAt, ioArgoprojWorkflowV1alpha1NodeStatus.startedAt) &&
        Objects.equals(this.synchronizationStatus, ioArgoprojWorkflowV1alpha1NodeStatus.synchronizationStatus) &&
        Objects.equals(this.templateName, ioArgoprojWorkflowV1alpha1NodeStatus.templateName) &&
        Objects.equals(this.templateRef, ioArgoprojWorkflowV1alpha1NodeStatus.templateRef) &&
        Objects.equals(this.templateScope, ioArgoprojWorkflowV1alpha1NodeStatus.templateScope) &&
        Objects.equals(this.type, ioArgoprojWorkflowV1alpha1NodeStatus.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(boundaryID, children, daemoned, displayName, estimatedDuration, finishedAt, hostNodeName, id, inputs, memoizationStatus, message, name, nodeFlag, outboundNodes, outputs, phase, podIP, progress, resourcesDuration, startedAt, synchronizationStatus, templateName, templateRef, templateScope, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1NodeStatus {\n");
    
    sb.append("    boundaryID: ").append(toIndentedString(boundaryID)).append("\n");
    sb.append("    children: ").append(toIndentedString(children)).append("\n");
    sb.append("    daemoned: ").append(toIndentedString(daemoned)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    estimatedDuration: ").append(toIndentedString(estimatedDuration)).append("\n");
    sb.append("    finishedAt: ").append(toIndentedString(finishedAt)).append("\n");
    sb.append("    hostNodeName: ").append(toIndentedString(hostNodeName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    memoizationStatus: ").append(toIndentedString(memoizationStatus)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeFlag: ").append(toIndentedString(nodeFlag)).append("\n");
    sb.append("    outboundNodes: ").append(toIndentedString(outboundNodes)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    podIP: ").append(toIndentedString(podIP)).append("\n");
    sb.append("    progress: ").append(toIndentedString(progress)).append("\n");
    sb.append("    resourcesDuration: ").append(toIndentedString(resourcesDuration)).append("\n");
    sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
    sb.append("    synchronizationStatus: ").append(toIndentedString(synchronizationStatus)).append("\n");
    sb.append("    templateName: ").append(toIndentedString(templateName)).append("\n");
    sb.append("    templateRef: ").append(toIndentedString(templateRef)).append("\n");
    sb.append("    templateScope: ").append(toIndentedString(templateScope)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

