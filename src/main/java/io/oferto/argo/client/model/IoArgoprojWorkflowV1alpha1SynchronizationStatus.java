/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1MutexStatus;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1SemaphoreStatus;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * SynchronizationStatus stores the status of semaphore and mutex.
 */
@ApiModel(description = "SynchronizationStatus stores the status of semaphore and mutex.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojWorkflowV1alpha1SynchronizationStatus {
  @SerializedName("mutex")
  private IoArgoprojWorkflowV1alpha1MutexStatus mutex = null;

  @SerializedName("semaphore")
  private IoArgoprojWorkflowV1alpha1SemaphoreStatus semaphore = null;

  public IoArgoprojWorkflowV1alpha1SynchronizationStatus mutex(IoArgoprojWorkflowV1alpha1MutexStatus mutex) {
    this.mutex = mutex;
    return this;
  }

   /**
   * Mutex stores this workflow&#39;s mutex holder details
   * @return mutex
  **/
  @ApiModelProperty(value = "Mutex stores this workflow's mutex holder details")
  public IoArgoprojWorkflowV1alpha1MutexStatus getMutex() {
    return mutex;
  }

  public void setMutex(IoArgoprojWorkflowV1alpha1MutexStatus mutex) {
    this.mutex = mutex;
  }

  public IoArgoprojWorkflowV1alpha1SynchronizationStatus semaphore(IoArgoprojWorkflowV1alpha1SemaphoreStatus semaphore) {
    this.semaphore = semaphore;
    return this;
  }

   /**
   * Semaphore stores this workflow&#39;s Semaphore holder details
   * @return semaphore
  **/
  @ApiModelProperty(value = "Semaphore stores this workflow's Semaphore holder details")
  public IoArgoprojWorkflowV1alpha1SemaphoreStatus getSemaphore() {
    return semaphore;
  }

  public void setSemaphore(IoArgoprojWorkflowV1alpha1SemaphoreStatus semaphore) {
    this.semaphore = semaphore;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1SynchronizationStatus ioArgoprojWorkflowV1alpha1SynchronizationStatus = (IoArgoprojWorkflowV1alpha1SynchronizationStatus) o;
    return Objects.equals(this.mutex, ioArgoprojWorkflowV1alpha1SynchronizationStatus.mutex) &&
        Objects.equals(this.semaphore, ioArgoprojWorkflowV1alpha1SynchronizationStatus.semaphore);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mutex, semaphore);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1SynchronizationStatus {\n");
    
    sb.append("    mutex: ").append(toIndentedString(mutex)).append("\n");
    sb.append("    semaphore: ").append(toIndentedString(semaphore)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

