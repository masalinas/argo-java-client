/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1ArtifactLocation;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1ContainerSetTemplate;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1DAGTemplate;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Data;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1ExecutorConfig;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1HTTP;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Inputs;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Memoize;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Metadata;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Metrics;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Outputs;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1ParallelSteps;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Plugin;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1ResourceTemplate;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1RetryStrategy;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1ScriptTemplate;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1SuspendTemplate;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Synchronization;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1UserContainer;
import io.oferto.argo.client.model.IoK8sApiCoreV1Affinity;
import io.oferto.argo.client.model.IoK8sApiCoreV1Container;
import io.oferto.argo.client.model.IoK8sApiCoreV1HostAlias;
import io.oferto.argo.client.model.IoK8sApiCoreV1PodSecurityContext;
import io.oferto.argo.client.model.IoK8sApiCoreV1Toleration;
import io.oferto.argo.client.model.IoK8sApiCoreV1Volume;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * Template is a reusable and composable unit of execution in a workflow
 */
@ApiModel(description = "Template is a reusable and composable unit of execution in a workflow")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojWorkflowV1alpha1Template {
  @SerializedName("activeDeadlineSeconds")
  private String activeDeadlineSeconds = null;

  @SerializedName("affinity")
  private IoK8sApiCoreV1Affinity affinity = null;

  @SerializedName("archiveLocation")
  private IoArgoprojWorkflowV1alpha1ArtifactLocation archiveLocation = null;

  @SerializedName("automountServiceAccountToken")
  private Boolean automountServiceAccountToken = null;

  @SerializedName("container")
  private IoK8sApiCoreV1Container container = null;

  @SerializedName("containerSet")
  private IoArgoprojWorkflowV1alpha1ContainerSetTemplate containerSet = null;

  @SerializedName("daemon")
  private Boolean daemon = null;

  @SerializedName("dag")
  private IoArgoprojWorkflowV1alpha1DAGTemplate dag = null;

  @SerializedName("data")
  private IoArgoprojWorkflowV1alpha1Data data = null;

  @SerializedName("executor")
  private IoArgoprojWorkflowV1alpha1ExecutorConfig executor = null;

  @SerializedName("failFast")
  private Boolean failFast = null;

  @SerializedName("hostAliases")
  private List<IoK8sApiCoreV1HostAlias> hostAliases = null;

  @SerializedName("http")
  private IoArgoprojWorkflowV1alpha1HTTP http = null;

  @SerializedName("initContainers")
  private List<IoArgoprojWorkflowV1alpha1UserContainer> initContainers = null;

  @SerializedName("inputs")
  private IoArgoprojWorkflowV1alpha1Inputs inputs = null;

  @SerializedName("memoize")
  private IoArgoprojWorkflowV1alpha1Memoize memoize = null;

  @SerializedName("metadata")
  private IoArgoprojWorkflowV1alpha1Metadata metadata = null;

  @SerializedName("metrics")
  private IoArgoprojWorkflowV1alpha1Metrics metrics = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nodeSelector")
  private Map<String, String> nodeSelector = null;

  @SerializedName("outputs")
  private IoArgoprojWorkflowV1alpha1Outputs outputs = null;

  @SerializedName("parallelism")
  private Integer parallelism = null;

  @SerializedName("plugin")
  private IoArgoprojWorkflowV1alpha1Plugin plugin = null;

  @SerializedName("podSpecPatch")
  private String podSpecPatch = null;

  @SerializedName("priority")
  private Integer priority = null;

  @SerializedName("priorityClassName")
  private String priorityClassName = null;

  @SerializedName("resource")
  private IoArgoprojWorkflowV1alpha1ResourceTemplate resource = null;

  @SerializedName("retryStrategy")
  private IoArgoprojWorkflowV1alpha1RetryStrategy retryStrategy = null;

  @SerializedName("schedulerName")
  private String schedulerName = null;

  @SerializedName("script")
  private IoArgoprojWorkflowV1alpha1ScriptTemplate script = null;

  @SerializedName("securityContext")
  private IoK8sApiCoreV1PodSecurityContext securityContext = null;

  @SerializedName("serviceAccountName")
  private String serviceAccountName = null;

  @SerializedName("sidecars")
  private List<IoArgoprojWorkflowV1alpha1UserContainer> sidecars = null;

  @SerializedName("steps")
  private List<IoArgoprojWorkflowV1alpha1ParallelSteps> steps = null;

  @SerializedName("suspend")
  private IoArgoprojWorkflowV1alpha1SuspendTemplate suspend = null;

  @SerializedName("synchronization")
  private IoArgoprojWorkflowV1alpha1Synchronization synchronization = null;

  @SerializedName("timeout")
  private String timeout = null;

  @SerializedName("tolerations")
  private List<IoK8sApiCoreV1Toleration> tolerations = null;

  @SerializedName("volumes")
  private List<IoK8sApiCoreV1Volume> volumes = null;

  public IoArgoprojWorkflowV1alpha1Template activeDeadlineSeconds(String activeDeadlineSeconds) {
    this.activeDeadlineSeconds = activeDeadlineSeconds;
    return this;
  }

   /**
   * Optional duration in seconds relative to the StartTime that the pod may be active on a node before the system actively tries to terminate the pod; value must be positive integer This field is only applicable to container and script templates.
   * @return activeDeadlineSeconds
  **/
  @ApiModelProperty(value = "Optional duration in seconds relative to the StartTime that the pod may be active on a node before the system actively tries to terminate the pod; value must be positive integer This field is only applicable to container and script templates.")
  public String getActiveDeadlineSeconds() {
    return activeDeadlineSeconds;
  }

  public void setActiveDeadlineSeconds(String activeDeadlineSeconds) {
    this.activeDeadlineSeconds = activeDeadlineSeconds;
  }

  public IoArgoprojWorkflowV1alpha1Template affinity(IoK8sApiCoreV1Affinity affinity) {
    this.affinity = affinity;
    return this;
  }

   /**
   * Affinity sets the pod&#39;s scheduling constraints Overrides the affinity set at the workflow level (if any)
   * @return affinity
  **/
  @ApiModelProperty(value = "Affinity sets the pod's scheduling constraints Overrides the affinity set at the workflow level (if any)")
  public IoK8sApiCoreV1Affinity getAffinity() {
    return affinity;
  }

  public void setAffinity(IoK8sApiCoreV1Affinity affinity) {
    this.affinity = affinity;
  }

  public IoArgoprojWorkflowV1alpha1Template archiveLocation(IoArgoprojWorkflowV1alpha1ArtifactLocation archiveLocation) {
    this.archiveLocation = archiveLocation;
    return this;
  }

   /**
   * Location in which all files related to the step will be stored (logs, artifacts, etc...). Can be overridden by individual items in Outputs. If omitted, will use the default artifact repository location configured in the controller, appended with the &lt;workflowname&gt;/&lt;nodename&gt; in the key.
   * @return archiveLocation
  **/
  @ApiModelProperty(value = "Location in which all files related to the step will be stored (logs, artifacts, etc...). Can be overridden by individual items in Outputs. If omitted, will use the default artifact repository location configured in the controller, appended with the <workflowname>/<nodename> in the key.")
  public IoArgoprojWorkflowV1alpha1ArtifactLocation getArchiveLocation() {
    return archiveLocation;
  }

  public void setArchiveLocation(IoArgoprojWorkflowV1alpha1ArtifactLocation archiveLocation) {
    this.archiveLocation = archiveLocation;
  }

  public IoArgoprojWorkflowV1alpha1Template automountServiceAccountToken(Boolean automountServiceAccountToken) {
    this.automountServiceAccountToken = automountServiceAccountToken;
    return this;
  }

   /**
   * AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.
   * @return automountServiceAccountToken
  **/
  @ApiModelProperty(value = "AutomountServiceAccountToken indicates whether a service account token should be automatically mounted in pods. ServiceAccountName of ExecutorConfig must be specified if this value is false.")
  public Boolean isAutomountServiceAccountToken() {
    return automountServiceAccountToken;
  }

  public void setAutomountServiceAccountToken(Boolean automountServiceAccountToken) {
    this.automountServiceAccountToken = automountServiceAccountToken;
  }

  public IoArgoprojWorkflowV1alpha1Template container(IoK8sApiCoreV1Container container) {
    this.container = container;
    return this;
  }

   /**
   * Container is the main container image to run in the pod
   * @return container
  **/
  @ApiModelProperty(value = "Container is the main container image to run in the pod")
  public IoK8sApiCoreV1Container getContainer() {
    return container;
  }

  public void setContainer(IoK8sApiCoreV1Container container) {
    this.container = container;
  }

  public IoArgoprojWorkflowV1alpha1Template containerSet(IoArgoprojWorkflowV1alpha1ContainerSetTemplate containerSet) {
    this.containerSet = containerSet;
    return this;
  }

   /**
   * ContainerSet groups multiple containers within a single pod.
   * @return containerSet
  **/
  @ApiModelProperty(value = "ContainerSet groups multiple containers within a single pod.")
  public IoArgoprojWorkflowV1alpha1ContainerSetTemplate getContainerSet() {
    return containerSet;
  }

  public void setContainerSet(IoArgoprojWorkflowV1alpha1ContainerSetTemplate containerSet) {
    this.containerSet = containerSet;
  }

  public IoArgoprojWorkflowV1alpha1Template daemon(Boolean daemon) {
    this.daemon = daemon;
    return this;
  }

   /**
   * Daemon will allow a workflow to proceed to the next step so long as the container reaches readiness
   * @return daemon
  **/
  @ApiModelProperty(value = "Daemon will allow a workflow to proceed to the next step so long as the container reaches readiness")
  public Boolean isDaemon() {
    return daemon;
  }

  public void setDaemon(Boolean daemon) {
    this.daemon = daemon;
  }

  public IoArgoprojWorkflowV1alpha1Template dag(IoArgoprojWorkflowV1alpha1DAGTemplate dag) {
    this.dag = dag;
    return this;
  }

   /**
   * DAG template subtype which runs a DAG
   * @return dag
  **/
  @ApiModelProperty(value = "DAG template subtype which runs a DAG")
  public IoArgoprojWorkflowV1alpha1DAGTemplate getDag() {
    return dag;
  }

  public void setDag(IoArgoprojWorkflowV1alpha1DAGTemplate dag) {
    this.dag = dag;
  }

  public IoArgoprojWorkflowV1alpha1Template data(IoArgoprojWorkflowV1alpha1Data data) {
    this.data = data;
    return this;
  }

   /**
   * Data is a data template
   * @return data
  **/
  @ApiModelProperty(value = "Data is a data template")
  public IoArgoprojWorkflowV1alpha1Data getData() {
    return data;
  }

  public void setData(IoArgoprojWorkflowV1alpha1Data data) {
    this.data = data;
  }

  public IoArgoprojWorkflowV1alpha1Template executor(IoArgoprojWorkflowV1alpha1ExecutorConfig executor) {
    this.executor = executor;
    return this;
  }

   /**
   * Executor holds configurations of the executor container.
   * @return executor
  **/
  @ApiModelProperty(value = "Executor holds configurations of the executor container.")
  public IoArgoprojWorkflowV1alpha1ExecutorConfig getExecutor() {
    return executor;
  }

  public void setExecutor(IoArgoprojWorkflowV1alpha1ExecutorConfig executor) {
    this.executor = executor;
  }

  public IoArgoprojWorkflowV1alpha1Template failFast(Boolean failFast) {
    this.failFast = failFast;
    return this;
  }

   /**
   * FailFast, if specified, will fail this template if any of its child pods has failed. This is useful for when this template is expanded with &#x60;withItems&#x60;, etc.
   * @return failFast
  **/
  @ApiModelProperty(value = "FailFast, if specified, will fail this template if any of its child pods has failed. This is useful for when this template is expanded with `withItems`, etc.")
  public Boolean isFailFast() {
    return failFast;
  }

  public void setFailFast(Boolean failFast) {
    this.failFast = failFast;
  }

  public IoArgoprojWorkflowV1alpha1Template hostAliases(List<IoK8sApiCoreV1HostAlias> hostAliases) {
    this.hostAliases = hostAliases;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1Template addHostAliasesItem(IoK8sApiCoreV1HostAlias hostAliasesItem) {
    if (this.hostAliases == null) {
      this.hostAliases = new ArrayList<IoK8sApiCoreV1HostAlias>();
    }
    this.hostAliases.add(hostAliasesItem);
    return this;
  }

   /**
   * HostAliases is an optional list of hosts and IPs that will be injected into the pod spec
   * @return hostAliases
  **/
  @ApiModelProperty(value = "HostAliases is an optional list of hosts and IPs that will be injected into the pod spec")
  public List<IoK8sApiCoreV1HostAlias> getHostAliases() {
    return hostAliases;
  }

  public void setHostAliases(List<IoK8sApiCoreV1HostAlias> hostAliases) {
    this.hostAliases = hostAliases;
  }

  public IoArgoprojWorkflowV1alpha1Template http(IoArgoprojWorkflowV1alpha1HTTP http) {
    this.http = http;
    return this;
  }

   /**
   * HTTP makes a HTTP request
   * @return http
  **/
  @ApiModelProperty(value = "HTTP makes a HTTP request")
  public IoArgoprojWorkflowV1alpha1HTTP getHttp() {
    return http;
  }

  public void setHttp(IoArgoprojWorkflowV1alpha1HTTP http) {
    this.http = http;
  }

  public IoArgoprojWorkflowV1alpha1Template initContainers(List<IoArgoprojWorkflowV1alpha1UserContainer> initContainers) {
    this.initContainers = initContainers;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1Template addInitContainersItem(IoArgoprojWorkflowV1alpha1UserContainer initContainersItem) {
    if (this.initContainers == null) {
      this.initContainers = new ArrayList<IoArgoprojWorkflowV1alpha1UserContainer>();
    }
    this.initContainers.add(initContainersItem);
    return this;
  }

   /**
   * InitContainers is a list of containers which run before the main container.
   * @return initContainers
  **/
  @ApiModelProperty(value = "InitContainers is a list of containers which run before the main container.")
  public List<IoArgoprojWorkflowV1alpha1UserContainer> getInitContainers() {
    return initContainers;
  }

  public void setInitContainers(List<IoArgoprojWorkflowV1alpha1UserContainer> initContainers) {
    this.initContainers = initContainers;
  }

  public IoArgoprojWorkflowV1alpha1Template inputs(IoArgoprojWorkflowV1alpha1Inputs inputs) {
    this.inputs = inputs;
    return this;
  }

   /**
   * Inputs describe what inputs parameters and artifacts are supplied to this template
   * @return inputs
  **/
  @ApiModelProperty(value = "Inputs describe what inputs parameters and artifacts are supplied to this template")
  public IoArgoprojWorkflowV1alpha1Inputs getInputs() {
    return inputs;
  }

  public void setInputs(IoArgoprojWorkflowV1alpha1Inputs inputs) {
    this.inputs = inputs;
  }

  public IoArgoprojWorkflowV1alpha1Template memoize(IoArgoprojWorkflowV1alpha1Memoize memoize) {
    this.memoize = memoize;
    return this;
  }

   /**
   * Memoize allows templates to use outputs generated from already executed templates
   * @return memoize
  **/
  @ApiModelProperty(value = "Memoize allows templates to use outputs generated from already executed templates")
  public IoArgoprojWorkflowV1alpha1Memoize getMemoize() {
    return memoize;
  }

  public void setMemoize(IoArgoprojWorkflowV1alpha1Memoize memoize) {
    this.memoize = memoize;
  }

  public IoArgoprojWorkflowV1alpha1Template metadata(IoArgoprojWorkflowV1alpha1Metadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Metdata sets the pods&#39;s metadata, i.e. annotations and labels
   * @return metadata
  **/
  @ApiModelProperty(value = "Metdata sets the pods's metadata, i.e. annotations and labels")
  public IoArgoprojWorkflowV1alpha1Metadata getMetadata() {
    return metadata;
  }

  public void setMetadata(IoArgoprojWorkflowV1alpha1Metadata metadata) {
    this.metadata = metadata;
  }

  public IoArgoprojWorkflowV1alpha1Template metrics(IoArgoprojWorkflowV1alpha1Metrics metrics) {
    this.metrics = metrics;
    return this;
  }

   /**
   * Metrics are a list of metrics emitted from this template
   * @return metrics
  **/
  @ApiModelProperty(value = "Metrics are a list of metrics emitted from this template")
  public IoArgoprojWorkflowV1alpha1Metrics getMetrics() {
    return metrics;
  }

  public void setMetrics(IoArgoprojWorkflowV1alpha1Metrics metrics) {
    this.metrics = metrics;
  }

  public IoArgoprojWorkflowV1alpha1Template name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name is the name of the template
   * @return name
  **/
  @ApiModelProperty(value = "Name is the name of the template")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IoArgoprojWorkflowV1alpha1Template nodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1Template putNodeSelectorItem(String key, String nodeSelectorItem) {
    if (this.nodeSelector == null) {
      this.nodeSelector = new HashMap<String, String>();
    }
    this.nodeSelector.put(key, nodeSelectorItem);
    return this;
  }

   /**
   * NodeSelector is a selector to schedule this step of the workflow to be run on the selected node(s). Overrides the selector set at the workflow level.
   * @return nodeSelector
  **/
  @ApiModelProperty(value = "NodeSelector is a selector to schedule this step of the workflow to be run on the selected node(s). Overrides the selector set at the workflow level.")
  public Map<String, String> getNodeSelector() {
    return nodeSelector;
  }

  public void setNodeSelector(Map<String, String> nodeSelector) {
    this.nodeSelector = nodeSelector;
  }

  public IoArgoprojWorkflowV1alpha1Template outputs(IoArgoprojWorkflowV1alpha1Outputs outputs) {
    this.outputs = outputs;
    return this;
  }

   /**
   * Outputs describe the parameters and artifacts that this template produces
   * @return outputs
  **/
  @ApiModelProperty(value = "Outputs describe the parameters and artifacts that this template produces")
  public IoArgoprojWorkflowV1alpha1Outputs getOutputs() {
    return outputs;
  }

  public void setOutputs(IoArgoprojWorkflowV1alpha1Outputs outputs) {
    this.outputs = outputs;
  }

  public IoArgoprojWorkflowV1alpha1Template parallelism(Integer parallelism) {
    this.parallelism = parallelism;
    return this;
  }

   /**
   * Parallelism limits the max total parallel pods that can execute at the same time within the boundaries of this template invocation. If additional steps/dag templates are invoked, the pods created by those templates will not be counted towards this total.
   * @return parallelism
  **/
  @ApiModelProperty(value = "Parallelism limits the max total parallel pods that can execute at the same time within the boundaries of this template invocation. If additional steps/dag templates are invoked, the pods created by those templates will not be counted towards this total.")
  public Integer getParallelism() {
    return parallelism;
  }

  public void setParallelism(Integer parallelism) {
    this.parallelism = parallelism;
  }

  public IoArgoprojWorkflowV1alpha1Template plugin(IoArgoprojWorkflowV1alpha1Plugin plugin) {
    this.plugin = plugin;
    return this;
  }

   /**
   * Plugin is a plugin template
   * @return plugin
  **/
  @ApiModelProperty(value = "Plugin is a plugin template")
  public IoArgoprojWorkflowV1alpha1Plugin getPlugin() {
    return plugin;
  }

  public void setPlugin(IoArgoprojWorkflowV1alpha1Plugin plugin) {
    this.plugin = plugin;
  }

  public IoArgoprojWorkflowV1alpha1Template podSpecPatch(String podSpecPatch) {
    this.podSpecPatch = podSpecPatch;
    return this;
  }

   /**
   * PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).
   * @return podSpecPatch
  **/
  @ApiModelProperty(value = "PodSpecPatch holds strategic merge patch to apply against the pod spec. Allows parameterization of container fields which are not strings (e.g. resource limits).")
  public String getPodSpecPatch() {
    return podSpecPatch;
  }

  public void setPodSpecPatch(String podSpecPatch) {
    this.podSpecPatch = podSpecPatch;
  }

  public IoArgoprojWorkflowV1alpha1Template priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority to apply to workflow pods.
   * @return priority
  **/
  @ApiModelProperty(value = "Priority to apply to workflow pods.")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public IoArgoprojWorkflowV1alpha1Template priorityClassName(String priorityClassName) {
    this.priorityClassName = priorityClassName;
    return this;
  }

   /**
   * PriorityClassName to apply to workflow pods.
   * @return priorityClassName
  **/
  @ApiModelProperty(value = "PriorityClassName to apply to workflow pods.")
  public String getPriorityClassName() {
    return priorityClassName;
  }

  public void setPriorityClassName(String priorityClassName) {
    this.priorityClassName = priorityClassName;
  }

  public IoArgoprojWorkflowV1alpha1Template resource(IoArgoprojWorkflowV1alpha1ResourceTemplate resource) {
    this.resource = resource;
    return this;
  }

   /**
   * Resource template subtype which can run k8s resources
   * @return resource
  **/
  @ApiModelProperty(value = "Resource template subtype which can run k8s resources")
  public IoArgoprojWorkflowV1alpha1ResourceTemplate getResource() {
    return resource;
  }

  public void setResource(IoArgoprojWorkflowV1alpha1ResourceTemplate resource) {
    this.resource = resource;
  }

  public IoArgoprojWorkflowV1alpha1Template retryStrategy(IoArgoprojWorkflowV1alpha1RetryStrategy retryStrategy) {
    this.retryStrategy = retryStrategy;
    return this;
  }

   /**
   * RetryStrategy describes how to retry a template when it fails
   * @return retryStrategy
  **/
  @ApiModelProperty(value = "RetryStrategy describes how to retry a template when it fails")
  public IoArgoprojWorkflowV1alpha1RetryStrategy getRetryStrategy() {
    return retryStrategy;
  }

  public void setRetryStrategy(IoArgoprojWorkflowV1alpha1RetryStrategy retryStrategy) {
    this.retryStrategy = retryStrategy;
  }

  public IoArgoprojWorkflowV1alpha1Template schedulerName(String schedulerName) {
    this.schedulerName = schedulerName;
    return this;
  }

   /**
   * If specified, the pod will be dispatched by specified scheduler. Or it will be dispatched by workflow scope scheduler if specified. If neither specified, the pod will be dispatched by default scheduler.
   * @return schedulerName
  **/
  @ApiModelProperty(value = "If specified, the pod will be dispatched by specified scheduler. Or it will be dispatched by workflow scope scheduler if specified. If neither specified, the pod will be dispatched by default scheduler.")
  public String getSchedulerName() {
    return schedulerName;
  }

  public void setSchedulerName(String schedulerName) {
    this.schedulerName = schedulerName;
  }

  public IoArgoprojWorkflowV1alpha1Template script(IoArgoprojWorkflowV1alpha1ScriptTemplate script) {
    this.script = script;
    return this;
  }

   /**
   * Script runs a portion of code against an interpreter
   * @return script
  **/
  @ApiModelProperty(value = "Script runs a portion of code against an interpreter")
  public IoArgoprojWorkflowV1alpha1ScriptTemplate getScript() {
    return script;
  }

  public void setScript(IoArgoprojWorkflowV1alpha1ScriptTemplate script) {
    this.script = script;
  }

  public IoArgoprojWorkflowV1alpha1Template securityContext(IoK8sApiCoreV1PodSecurityContext securityContext) {
    this.securityContext = securityContext;
    return this;
  }

   /**
   * SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.
   * @return securityContext
  **/
  @ApiModelProperty(value = "SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.")
  public IoK8sApiCoreV1PodSecurityContext getSecurityContext() {
    return securityContext;
  }

  public void setSecurityContext(IoK8sApiCoreV1PodSecurityContext securityContext) {
    this.securityContext = securityContext;
  }

  public IoArgoprojWorkflowV1alpha1Template serviceAccountName(String serviceAccountName) {
    this.serviceAccountName = serviceAccountName;
    return this;
  }

   /**
   * ServiceAccountName to apply to workflow pods
   * @return serviceAccountName
  **/
  @ApiModelProperty(value = "ServiceAccountName to apply to workflow pods")
  public String getServiceAccountName() {
    return serviceAccountName;
  }

  public void setServiceAccountName(String serviceAccountName) {
    this.serviceAccountName = serviceAccountName;
  }

  public IoArgoprojWorkflowV1alpha1Template sidecars(List<IoArgoprojWorkflowV1alpha1UserContainer> sidecars) {
    this.sidecars = sidecars;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1Template addSidecarsItem(IoArgoprojWorkflowV1alpha1UserContainer sidecarsItem) {
    if (this.sidecars == null) {
      this.sidecars = new ArrayList<IoArgoprojWorkflowV1alpha1UserContainer>();
    }
    this.sidecars.add(sidecarsItem);
    return this;
  }

   /**
   * Sidecars is a list of containers which run alongside the main container Sidecars are automatically killed when the main container completes
   * @return sidecars
  **/
  @ApiModelProperty(value = "Sidecars is a list of containers which run alongside the main container Sidecars are automatically killed when the main container completes")
  public List<IoArgoprojWorkflowV1alpha1UserContainer> getSidecars() {
    return sidecars;
  }

  public void setSidecars(List<IoArgoprojWorkflowV1alpha1UserContainer> sidecars) {
    this.sidecars = sidecars;
  }

  public IoArgoprojWorkflowV1alpha1Template steps(List<IoArgoprojWorkflowV1alpha1ParallelSteps> steps) {
    this.steps = steps;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1Template addStepsItem(IoArgoprojWorkflowV1alpha1ParallelSteps stepsItem) {
    if (this.steps == null) {
      this.steps = new ArrayList<IoArgoprojWorkflowV1alpha1ParallelSteps>();
    }
    this.steps.add(stepsItem);
    return this;
  }

   /**
   * Steps define a series of sequential/parallel workflow steps
   * @return steps
  **/
  @ApiModelProperty(value = "Steps define a series of sequential/parallel workflow steps")
  public List<IoArgoprojWorkflowV1alpha1ParallelSteps> getSteps() {
    return steps;
  }

  public void setSteps(List<IoArgoprojWorkflowV1alpha1ParallelSteps> steps) {
    this.steps = steps;
  }

  public IoArgoprojWorkflowV1alpha1Template suspend(IoArgoprojWorkflowV1alpha1SuspendTemplate suspend) {
    this.suspend = suspend;
    return this;
  }

   /**
   * Suspend template subtype which can suspend a workflow when reaching the step
   * @return suspend
  **/
  @ApiModelProperty(value = "Suspend template subtype which can suspend a workflow when reaching the step")
  public IoArgoprojWorkflowV1alpha1SuspendTemplate getSuspend() {
    return suspend;
  }

  public void setSuspend(IoArgoprojWorkflowV1alpha1SuspendTemplate suspend) {
    this.suspend = suspend;
  }

  public IoArgoprojWorkflowV1alpha1Template synchronization(IoArgoprojWorkflowV1alpha1Synchronization synchronization) {
    this.synchronization = synchronization;
    return this;
  }

   /**
   * Synchronization holds synchronization lock configuration for this template
   * @return synchronization
  **/
  @ApiModelProperty(value = "Synchronization holds synchronization lock configuration for this template")
  public IoArgoprojWorkflowV1alpha1Synchronization getSynchronization() {
    return synchronization;
  }

  public void setSynchronization(IoArgoprojWorkflowV1alpha1Synchronization synchronization) {
    this.synchronization = synchronization;
  }

  public IoArgoprojWorkflowV1alpha1Template timeout(String timeout) {
    this.timeout = timeout;
    return this;
  }

   /**
   * Timeout allows to set the total node execution timeout duration counting from the node&#39;s start time. This duration also includes time in which the node spends in Pending state. This duration may not be applied to Step or DAG templates.
   * @return timeout
  **/
  @ApiModelProperty(value = "Timeout allows to set the total node execution timeout duration counting from the node's start time. This duration also includes time in which the node spends in Pending state. This duration may not be applied to Step or DAG templates.")
  public String getTimeout() {
    return timeout;
  }

  public void setTimeout(String timeout) {
    this.timeout = timeout;
  }

  public IoArgoprojWorkflowV1alpha1Template tolerations(List<IoK8sApiCoreV1Toleration> tolerations) {
    this.tolerations = tolerations;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1Template addTolerationsItem(IoK8sApiCoreV1Toleration tolerationsItem) {
    if (this.tolerations == null) {
      this.tolerations = new ArrayList<IoK8sApiCoreV1Toleration>();
    }
    this.tolerations.add(tolerationsItem);
    return this;
  }

   /**
   * Tolerations to apply to workflow pods.
   * @return tolerations
  **/
  @ApiModelProperty(value = "Tolerations to apply to workflow pods.")
  public List<IoK8sApiCoreV1Toleration> getTolerations() {
    return tolerations;
  }

  public void setTolerations(List<IoK8sApiCoreV1Toleration> tolerations) {
    this.tolerations = tolerations;
  }

  public IoArgoprojWorkflowV1alpha1Template volumes(List<IoK8sApiCoreV1Volume> volumes) {
    this.volumes = volumes;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1Template addVolumesItem(IoK8sApiCoreV1Volume volumesItem) {
    if (this.volumes == null) {
      this.volumes = new ArrayList<IoK8sApiCoreV1Volume>();
    }
    this.volumes.add(volumesItem);
    return this;
  }

   /**
   * Volumes is a list of volumes that can be mounted by containers in a template.
   * @return volumes
  **/
  @ApiModelProperty(value = "Volumes is a list of volumes that can be mounted by containers in a template.")
  public List<IoK8sApiCoreV1Volume> getVolumes() {
    return volumes;
  }

  public void setVolumes(List<IoK8sApiCoreV1Volume> volumes) {
    this.volumes = volumes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1Template ioArgoprojWorkflowV1alpha1Template = (IoArgoprojWorkflowV1alpha1Template) o;
    return Objects.equals(this.activeDeadlineSeconds, ioArgoprojWorkflowV1alpha1Template.activeDeadlineSeconds) &&
        Objects.equals(this.affinity, ioArgoprojWorkflowV1alpha1Template.affinity) &&
        Objects.equals(this.archiveLocation, ioArgoprojWorkflowV1alpha1Template.archiveLocation) &&
        Objects.equals(this.automountServiceAccountToken, ioArgoprojWorkflowV1alpha1Template.automountServiceAccountToken) &&
        Objects.equals(this.container, ioArgoprojWorkflowV1alpha1Template.container) &&
        Objects.equals(this.containerSet, ioArgoprojWorkflowV1alpha1Template.containerSet) &&
        Objects.equals(this.daemon, ioArgoprojWorkflowV1alpha1Template.daemon) &&
        Objects.equals(this.dag, ioArgoprojWorkflowV1alpha1Template.dag) &&
        Objects.equals(this.data, ioArgoprojWorkflowV1alpha1Template.data) &&
        Objects.equals(this.executor, ioArgoprojWorkflowV1alpha1Template.executor) &&
        Objects.equals(this.failFast, ioArgoprojWorkflowV1alpha1Template.failFast) &&
        Objects.equals(this.hostAliases, ioArgoprojWorkflowV1alpha1Template.hostAliases) &&
        Objects.equals(this.http, ioArgoprojWorkflowV1alpha1Template.http) &&
        Objects.equals(this.initContainers, ioArgoprojWorkflowV1alpha1Template.initContainers) &&
        Objects.equals(this.inputs, ioArgoprojWorkflowV1alpha1Template.inputs) &&
        Objects.equals(this.memoize, ioArgoprojWorkflowV1alpha1Template.memoize) &&
        Objects.equals(this.metadata, ioArgoprojWorkflowV1alpha1Template.metadata) &&
        Objects.equals(this.metrics, ioArgoprojWorkflowV1alpha1Template.metrics) &&
        Objects.equals(this.name, ioArgoprojWorkflowV1alpha1Template.name) &&
        Objects.equals(this.nodeSelector, ioArgoprojWorkflowV1alpha1Template.nodeSelector) &&
        Objects.equals(this.outputs, ioArgoprojWorkflowV1alpha1Template.outputs) &&
        Objects.equals(this.parallelism, ioArgoprojWorkflowV1alpha1Template.parallelism) &&
        Objects.equals(this.plugin, ioArgoprojWorkflowV1alpha1Template.plugin) &&
        Objects.equals(this.podSpecPatch, ioArgoprojWorkflowV1alpha1Template.podSpecPatch) &&
        Objects.equals(this.priority, ioArgoprojWorkflowV1alpha1Template.priority) &&
        Objects.equals(this.priorityClassName, ioArgoprojWorkflowV1alpha1Template.priorityClassName) &&
        Objects.equals(this.resource, ioArgoprojWorkflowV1alpha1Template.resource) &&
        Objects.equals(this.retryStrategy, ioArgoprojWorkflowV1alpha1Template.retryStrategy) &&
        Objects.equals(this.schedulerName, ioArgoprojWorkflowV1alpha1Template.schedulerName) &&
        Objects.equals(this.script, ioArgoprojWorkflowV1alpha1Template.script) &&
        Objects.equals(this.securityContext, ioArgoprojWorkflowV1alpha1Template.securityContext) &&
        Objects.equals(this.serviceAccountName, ioArgoprojWorkflowV1alpha1Template.serviceAccountName) &&
        Objects.equals(this.sidecars, ioArgoprojWorkflowV1alpha1Template.sidecars) &&
        Objects.equals(this.steps, ioArgoprojWorkflowV1alpha1Template.steps) &&
        Objects.equals(this.suspend, ioArgoprojWorkflowV1alpha1Template.suspend) &&
        Objects.equals(this.synchronization, ioArgoprojWorkflowV1alpha1Template.synchronization) &&
        Objects.equals(this.timeout, ioArgoprojWorkflowV1alpha1Template.timeout) &&
        Objects.equals(this.tolerations, ioArgoprojWorkflowV1alpha1Template.tolerations) &&
        Objects.equals(this.volumes, ioArgoprojWorkflowV1alpha1Template.volumes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activeDeadlineSeconds, affinity, archiveLocation, automountServiceAccountToken, container, containerSet, daemon, dag, data, executor, failFast, hostAliases, http, initContainers, inputs, memoize, metadata, metrics, name, nodeSelector, outputs, parallelism, plugin, podSpecPatch, priority, priorityClassName, resource, retryStrategy, schedulerName, script, securityContext, serviceAccountName, sidecars, steps, suspend, synchronization, timeout, tolerations, volumes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1Template {\n");
    
    sb.append("    activeDeadlineSeconds: ").append(toIndentedString(activeDeadlineSeconds)).append("\n");
    sb.append("    affinity: ").append(toIndentedString(affinity)).append("\n");
    sb.append("    archiveLocation: ").append(toIndentedString(archiveLocation)).append("\n");
    sb.append("    automountServiceAccountToken: ").append(toIndentedString(automountServiceAccountToken)).append("\n");
    sb.append("    container: ").append(toIndentedString(container)).append("\n");
    sb.append("    containerSet: ").append(toIndentedString(containerSet)).append("\n");
    sb.append("    daemon: ").append(toIndentedString(daemon)).append("\n");
    sb.append("    dag: ").append(toIndentedString(dag)).append("\n");
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    executor: ").append(toIndentedString(executor)).append("\n");
    sb.append("    failFast: ").append(toIndentedString(failFast)).append("\n");
    sb.append("    hostAliases: ").append(toIndentedString(hostAliases)).append("\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    initContainers: ").append(toIndentedString(initContainers)).append("\n");
    sb.append("    inputs: ").append(toIndentedString(inputs)).append("\n");
    sb.append("    memoize: ").append(toIndentedString(memoize)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    metrics: ").append(toIndentedString(metrics)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nodeSelector: ").append(toIndentedString(nodeSelector)).append("\n");
    sb.append("    outputs: ").append(toIndentedString(outputs)).append("\n");
    sb.append("    parallelism: ").append(toIndentedString(parallelism)).append("\n");
    sb.append("    plugin: ").append(toIndentedString(plugin)).append("\n");
    sb.append("    podSpecPatch: ").append(toIndentedString(podSpecPatch)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    priorityClassName: ").append(toIndentedString(priorityClassName)).append("\n");
    sb.append("    resource: ").append(toIndentedString(resource)).append("\n");
    sb.append("    retryStrategy: ").append(toIndentedString(retryStrategy)).append("\n");
    sb.append("    schedulerName: ").append(toIndentedString(schedulerName)).append("\n");
    sb.append("    script: ").append(toIndentedString(script)).append("\n");
    sb.append("    securityContext: ").append(toIndentedString(securityContext)).append("\n");
    sb.append("    serviceAccountName: ").append(toIndentedString(serviceAccountName)).append("\n");
    sb.append("    sidecars: ").append(toIndentedString(sidecars)).append("\n");
    sb.append("    steps: ").append(toIndentedString(steps)).append("\n");
    sb.append("    suspend: ").append(toIndentedString(suspend)).append("\n");
    sb.append("    synchronization: ").append(toIndentedString(synchronization)).append("\n");
    sb.append("    timeout: ").append(toIndentedString(timeout)).append("\n");
    sb.append("    tolerations: ").append(toIndentedString(tolerations)).append("\n");
    sb.append("    volumes: ").append(toIndentedString(volumes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

