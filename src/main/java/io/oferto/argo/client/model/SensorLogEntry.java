/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * SensorLogEntry
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class SensorLogEntry {
  @SerializedName("dependencyName")
  private String dependencyName = null;

  @SerializedName("eventContext")
  private String eventContext = null;

  @SerializedName("level")
  private String level = null;

  @SerializedName("msg")
  private String msg = null;

  @SerializedName("namespace")
  private String namespace = null;

  @SerializedName("sensorName")
  private String sensorName = null;

  @SerializedName("time")
  private String time = null;

  @SerializedName("triggerName")
  private String triggerName = null;

  public SensorLogEntry dependencyName(String dependencyName) {
    this.dependencyName = dependencyName;
    return this;
  }

   /**
   * Get dependencyName
   * @return dependencyName
  **/
  @ApiModelProperty(value = "")
  public String getDependencyName() {
    return dependencyName;
  }

  public void setDependencyName(String dependencyName) {
    this.dependencyName = dependencyName;
  }

  public SensorLogEntry eventContext(String eventContext) {
    this.eventContext = eventContext;
    return this;
  }

   /**
   * Get eventContext
   * @return eventContext
  **/
  @ApiModelProperty(value = "")
  public String getEventContext() {
    return eventContext;
  }

  public void setEventContext(String eventContext) {
    this.eventContext = eventContext;
  }

  public SensorLogEntry level(String level) {
    this.level = level;
    return this;
  }

   /**
   * Get level
   * @return level
  **/
  @ApiModelProperty(value = "")
  public String getLevel() {
    return level;
  }

  public void setLevel(String level) {
    this.level = level;
  }

  public SensorLogEntry msg(String msg) {
    this.msg = msg;
    return this;
  }

   /**
   * Get msg
   * @return msg
  **/
  @ApiModelProperty(value = "")
  public String getMsg() {
    return msg;
  }

  public void setMsg(String msg) {
    this.msg = msg;
  }

  public SensorLogEntry namespace(String namespace) {
    this.namespace = namespace;
    return this;
  }

   /**
   * Get namespace
   * @return namespace
  **/
  @ApiModelProperty(value = "")
  public String getNamespace() {
    return namespace;
  }

  public void setNamespace(String namespace) {
    this.namespace = namespace;
  }

  public SensorLogEntry sensorName(String sensorName) {
    this.sensorName = sensorName;
    return this;
  }

   /**
   * Get sensorName
   * @return sensorName
  **/
  @ApiModelProperty(value = "")
  public String getSensorName() {
    return sensorName;
  }

  public void setSensorName(String sensorName) {
    this.sensorName = sensorName;
  }

  public SensorLogEntry time(String time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(value = "")
  public String getTime() {
    return time;
  }

  public void setTime(String time) {
    this.time = time;
  }

  public SensorLogEntry triggerName(String triggerName) {
    this.triggerName = triggerName;
    return this;
  }

   /**
   * Get triggerName
   * @return triggerName
  **/
  @ApiModelProperty(value = "")
  public String getTriggerName() {
    return triggerName;
  }

  public void setTriggerName(String triggerName) {
    this.triggerName = triggerName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SensorLogEntry sensorLogEntry = (SensorLogEntry) o;
    return Objects.equals(this.dependencyName, sensorLogEntry.dependencyName) &&
        Objects.equals(this.eventContext, sensorLogEntry.eventContext) &&
        Objects.equals(this.level, sensorLogEntry.level) &&
        Objects.equals(this.msg, sensorLogEntry.msg) &&
        Objects.equals(this.namespace, sensorLogEntry.namespace) &&
        Objects.equals(this.sensorName, sensorLogEntry.sensorName) &&
        Objects.equals(this.time, sensorLogEntry.time) &&
        Objects.equals(this.triggerName, sensorLogEntry.triggerName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(dependencyName, eventContext, level, msg, namespace, sensorName, time, triggerName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SensorLogEntry {\n");
    
    sb.append("    dependencyName: ").append(toIndentedString(dependencyName)).append("\n");
    sb.append("    eventContext: ").append(toIndentedString(eventContext)).append("\n");
    sb.append("    level: ").append(toIndentedString(level)).append("\n");
    sb.append("    msg: ").append(toIndentedString(msg)).append("\n");
    sb.append("    namespace: ").append(toIndentedString(namespace)).append("\n");
    sb.append("    sensorName: ").append(toIndentedString(sensorName)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    triggerName: ").append(toIndentedString(triggerName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

