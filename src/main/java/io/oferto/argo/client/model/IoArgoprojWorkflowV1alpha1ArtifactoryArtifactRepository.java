/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoK8sApiCoreV1SecretKeySelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * ArtifactoryArtifactRepository defines the controller configuration for an artifactory artifact repository
 */
@ApiModel(description = "ArtifactoryArtifactRepository defines the controller configuration for an artifactory artifact repository")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository {
  @SerializedName("keyFormat")
  private String keyFormat = null;

  @SerializedName("passwordSecret")
  private IoK8sApiCoreV1SecretKeySelector passwordSecret = null;

  @SerializedName("repoURL")
  private String repoURL = null;

  @SerializedName("usernameSecret")
  private IoK8sApiCoreV1SecretKeySelector usernameSecret = null;

  public IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository keyFormat(String keyFormat) {
    this.keyFormat = keyFormat;
    return this;
  }

   /**
   * KeyFormat defines the format of how to store keys and can reference workflow variables.
   * @return keyFormat
  **/
  @ApiModelProperty(value = "KeyFormat defines the format of how to store keys and can reference workflow variables.")
  public String getKeyFormat() {
    return keyFormat;
  }

  public void setKeyFormat(String keyFormat) {
    this.keyFormat = keyFormat;
  }

  public IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository passwordSecret(IoK8sApiCoreV1SecretKeySelector passwordSecret) {
    this.passwordSecret = passwordSecret;
    return this;
  }

   /**
   * PasswordSecret is the secret selector to the repository password
   * @return passwordSecret
  **/
  @ApiModelProperty(value = "PasswordSecret is the secret selector to the repository password")
  public IoK8sApiCoreV1SecretKeySelector getPasswordSecret() {
    return passwordSecret;
  }

  public void setPasswordSecret(IoK8sApiCoreV1SecretKeySelector passwordSecret) {
    this.passwordSecret = passwordSecret;
  }

  public IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository repoURL(String repoURL) {
    this.repoURL = repoURL;
    return this;
  }

   /**
   * RepoURL is the url for artifactory repo.
   * @return repoURL
  **/
  @ApiModelProperty(value = "RepoURL is the url for artifactory repo.")
  public String getRepoURL() {
    return repoURL;
  }

  public void setRepoURL(String repoURL) {
    this.repoURL = repoURL;
  }

  public IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository usernameSecret(IoK8sApiCoreV1SecretKeySelector usernameSecret) {
    this.usernameSecret = usernameSecret;
    return this;
  }

   /**
   * UsernameSecret is the secret selector to the repository username
   * @return usernameSecret
  **/
  @ApiModelProperty(value = "UsernameSecret is the secret selector to the repository username")
  public IoK8sApiCoreV1SecretKeySelector getUsernameSecret() {
    return usernameSecret;
  }

  public void setUsernameSecret(IoK8sApiCoreV1SecretKeySelector usernameSecret) {
    this.usernameSecret = usernameSecret;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository ioArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository = (IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository) o;
    return Objects.equals(this.keyFormat, ioArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository.keyFormat) &&
        Objects.equals(this.passwordSecret, ioArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository.passwordSecret) &&
        Objects.equals(this.repoURL, ioArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository.repoURL) &&
        Objects.equals(this.usernameSecret, ioArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository.usernameSecret);
  }

  @Override
  public int hashCode() {
    return Objects.hash(keyFormat, passwordSecret, repoURL, usernameSecret);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1ArtifactoryArtifactRepository {\n");
    
    sb.append("    keyFormat: ").append(toIndentedString(keyFormat)).append("\n");
    sb.append("    passwordSecret: ").append(toIndentedString(passwordSecret)).append("\n");
    sb.append("    repoURL: ").append(toIndentedString(repoURL)).append("\n");
    sb.append("    usernameSecret: ").append(toIndentedString(usernameSecret)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

