/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Column;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Link;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * IoArgoprojWorkflowV1alpha1InfoResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojWorkflowV1alpha1InfoResponse {
  @SerializedName("columns")
  private List<IoArgoprojWorkflowV1alpha1Column> columns = null;

  @SerializedName("links")
  private List<IoArgoprojWorkflowV1alpha1Link> links = null;

  @SerializedName("managedNamespace")
  private String managedNamespace = null;

  @SerializedName("modals")
  private Map<String, Boolean> modals = null;

  @SerializedName("navColor")
  private String navColor = null;

  public IoArgoprojWorkflowV1alpha1InfoResponse columns(List<IoArgoprojWorkflowV1alpha1Column> columns) {
    this.columns = columns;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1InfoResponse addColumnsItem(IoArgoprojWorkflowV1alpha1Column columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<IoArgoprojWorkflowV1alpha1Column>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Get columns
   * @return columns
  **/
  @ApiModelProperty(value = "")
  public List<IoArgoprojWorkflowV1alpha1Column> getColumns() {
    return columns;
  }

  public void setColumns(List<IoArgoprojWorkflowV1alpha1Column> columns) {
    this.columns = columns;
  }

  public IoArgoprojWorkflowV1alpha1InfoResponse links(List<IoArgoprojWorkflowV1alpha1Link> links) {
    this.links = links;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1InfoResponse addLinksItem(IoArgoprojWorkflowV1alpha1Link linksItem) {
    if (this.links == null) {
      this.links = new ArrayList<IoArgoprojWorkflowV1alpha1Link>();
    }
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(value = "")
  public List<IoArgoprojWorkflowV1alpha1Link> getLinks() {
    return links;
  }

  public void setLinks(List<IoArgoprojWorkflowV1alpha1Link> links) {
    this.links = links;
  }

  public IoArgoprojWorkflowV1alpha1InfoResponse managedNamespace(String managedNamespace) {
    this.managedNamespace = managedNamespace;
    return this;
  }

   /**
   * Get managedNamespace
   * @return managedNamespace
  **/
  @ApiModelProperty(value = "")
  public String getManagedNamespace() {
    return managedNamespace;
  }

  public void setManagedNamespace(String managedNamespace) {
    this.managedNamespace = managedNamespace;
  }

  public IoArgoprojWorkflowV1alpha1InfoResponse modals(Map<String, Boolean> modals) {
    this.modals = modals;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1InfoResponse putModalsItem(String key, Boolean modalsItem) {
    if (this.modals == null) {
      this.modals = new HashMap<String, Boolean>();
    }
    this.modals.put(key, modalsItem);
    return this;
  }

   /**
   * Get modals
   * @return modals
  **/
  @ApiModelProperty(value = "")
  public Map<String, Boolean> getModals() {
    return modals;
  }

  public void setModals(Map<String, Boolean> modals) {
    this.modals = modals;
  }

  public IoArgoprojWorkflowV1alpha1InfoResponse navColor(String navColor) {
    this.navColor = navColor;
    return this;
  }

   /**
   * Get navColor
   * @return navColor
  **/
  @ApiModelProperty(value = "")
  public String getNavColor() {
    return navColor;
  }

  public void setNavColor(String navColor) {
    this.navColor = navColor;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1InfoResponse ioArgoprojWorkflowV1alpha1InfoResponse = (IoArgoprojWorkflowV1alpha1InfoResponse) o;
    return Objects.equals(this.columns, ioArgoprojWorkflowV1alpha1InfoResponse.columns) &&
        Objects.equals(this.links, ioArgoprojWorkflowV1alpha1InfoResponse.links) &&
        Objects.equals(this.managedNamespace, ioArgoprojWorkflowV1alpha1InfoResponse.managedNamespace) &&
        Objects.equals(this.modals, ioArgoprojWorkflowV1alpha1InfoResponse.modals) &&
        Objects.equals(this.navColor, ioArgoprojWorkflowV1alpha1InfoResponse.navColor);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columns, links, managedNamespace, modals, navColor);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1InfoResponse {\n");
    
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    managedNamespace: ").append(toIndentedString(managedNamespace)).append("\n");
    sb.append("    modals: ").append(toIndentedString(modals)).append("\n");
    sb.append("    navColor: ").append(toIndentedString(navColor)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

