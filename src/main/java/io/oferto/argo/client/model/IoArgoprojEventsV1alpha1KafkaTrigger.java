/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1SASLConfig;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1TLSConfig;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1TriggerParameter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * KafkaTrigger refers to the specification of the Kafka trigger.
 */
@ApiModel(description = "KafkaTrigger refers to the specification of the Kafka trigger.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojEventsV1alpha1KafkaTrigger {
  @SerializedName("compress")
  private Boolean compress = null;

  @SerializedName("flushFrequency")
  private Integer flushFrequency = null;

  @SerializedName("parameters")
  private List<IoArgoprojEventsV1alpha1TriggerParameter> parameters = null;

  @SerializedName("partition")
  private Integer partition = null;

  @SerializedName("partitioningKey")
  private String partitioningKey = null;

  @SerializedName("payload")
  private List<IoArgoprojEventsV1alpha1TriggerParameter> payload = null;

  @SerializedName("requiredAcks")
  private Integer requiredAcks = null;

  @SerializedName("sasl")
  private IoArgoprojEventsV1alpha1SASLConfig sasl = null;

  @SerializedName("tls")
  private IoArgoprojEventsV1alpha1TLSConfig tls = null;

  @SerializedName("topic")
  private String topic = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("version")
  private String version = null;

  public IoArgoprojEventsV1alpha1KafkaTrigger compress(Boolean compress) {
    this.compress = compress;
    return this;
  }

   /**
   * Get compress
   * @return compress
  **/
  @ApiModelProperty(value = "")
  public Boolean isCompress() {
    return compress;
  }

  public void setCompress(Boolean compress) {
    this.compress = compress;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger flushFrequency(Integer flushFrequency) {
    this.flushFrequency = flushFrequency;
    return this;
  }

   /**
   * Get flushFrequency
   * @return flushFrequency
  **/
  @ApiModelProperty(value = "")
  public Integer getFlushFrequency() {
    return flushFrequency;
  }

  public void setFlushFrequency(Integer flushFrequency) {
    this.flushFrequency = flushFrequency;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger parameters(List<IoArgoprojEventsV1alpha1TriggerParameter> parameters) {
    this.parameters = parameters;
    return this;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger addParametersItem(IoArgoprojEventsV1alpha1TriggerParameter parametersItem) {
    if (this.parameters == null) {
      this.parameters = new ArrayList<IoArgoprojEventsV1alpha1TriggerParameter>();
    }
    this.parameters.add(parametersItem);
    return this;
  }

   /**
   * Parameters is the list of parameters that is applied to resolved Kafka trigger object.
   * @return parameters
  **/
  @ApiModelProperty(value = "Parameters is the list of parameters that is applied to resolved Kafka trigger object.")
  public List<IoArgoprojEventsV1alpha1TriggerParameter> getParameters() {
    return parameters;
  }

  public void setParameters(List<IoArgoprojEventsV1alpha1TriggerParameter> parameters) {
    this.parameters = parameters;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger partition(Integer partition) {
    this.partition = partition;
    return this;
  }

   /**
   * Partition to write data to.
   * @return partition
  **/
  @ApiModelProperty(value = "Partition to write data to.")
  public Integer getPartition() {
    return partition;
  }

  public void setPartition(Integer partition) {
    this.partition = partition;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger partitioningKey(String partitioningKey) {
    this.partitioningKey = partitioningKey;
    return this;
  }

   /**
   * The partitioning key for the messages put on the Kafka topic. Defaults to broker url. +optional.
   * @return partitioningKey
  **/
  @ApiModelProperty(value = "The partitioning key for the messages put on the Kafka topic. Defaults to broker url. +optional.")
  public String getPartitioningKey() {
    return partitioningKey;
  }

  public void setPartitioningKey(String partitioningKey) {
    this.partitioningKey = partitioningKey;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger payload(List<IoArgoprojEventsV1alpha1TriggerParameter> payload) {
    this.payload = payload;
    return this;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger addPayloadItem(IoArgoprojEventsV1alpha1TriggerParameter payloadItem) {
    if (this.payload == null) {
      this.payload = new ArrayList<IoArgoprojEventsV1alpha1TriggerParameter>();
    }
    this.payload.add(payloadItem);
    return this;
  }

   /**
   * Payload is the list of key-value extracted from an event payload to construct the request payload.
   * @return payload
  **/
  @ApiModelProperty(value = "Payload is the list of key-value extracted from an event payload to construct the request payload.")
  public List<IoArgoprojEventsV1alpha1TriggerParameter> getPayload() {
    return payload;
  }

  public void setPayload(List<IoArgoprojEventsV1alpha1TriggerParameter> payload) {
    this.payload = payload;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger requiredAcks(Integer requiredAcks) {
    this.requiredAcks = requiredAcks;
    return this;
  }

   /**
   * RequiredAcks used in producer to tell the broker how many replica acknowledgements Defaults to 1 (Only wait for the leader to ack). +optional.
   * @return requiredAcks
  **/
  @ApiModelProperty(value = "RequiredAcks used in producer to tell the broker how many replica acknowledgements Defaults to 1 (Only wait for the leader to ack). +optional.")
  public Integer getRequiredAcks() {
    return requiredAcks;
  }

  public void setRequiredAcks(Integer requiredAcks) {
    this.requiredAcks = requiredAcks;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger sasl(IoArgoprojEventsV1alpha1SASLConfig sasl) {
    this.sasl = sasl;
    return this;
  }

   /**
   * Get sasl
   * @return sasl
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1SASLConfig getSasl() {
    return sasl;
  }

  public void setSasl(IoArgoprojEventsV1alpha1SASLConfig sasl) {
    this.sasl = sasl;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger tls(IoArgoprojEventsV1alpha1TLSConfig tls) {
    this.tls = tls;
    return this;
  }

   /**
   * Get tls
   * @return tls
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1TLSConfig getTls() {
    return tls;
  }

  public void setTls(IoArgoprojEventsV1alpha1TLSConfig tls) {
    this.tls = tls;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger topic(String topic) {
    this.topic = topic;
    return this;
  }

   /**
   * Get topic
   * @return topic
  **/
  @ApiModelProperty(value = "")
  public String getTopic() {
    return topic;
  }

  public void setTopic(String topic) {
    this.topic = topic;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger url(String url) {
    this.url = url;
    return this;
  }

   /**
   * URL of the Kafka broker, multiple URLs separated by comma.
   * @return url
  **/
  @ApiModelProperty(value = "URL of the Kafka broker, multiple URLs separated by comma.")
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public IoArgoprojEventsV1alpha1KafkaTrigger version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Get version
   * @return version
  **/
  @ApiModelProperty(value = "")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1KafkaTrigger ioArgoprojEventsV1alpha1KafkaTrigger = (IoArgoprojEventsV1alpha1KafkaTrigger) o;
    return Objects.equals(this.compress, ioArgoprojEventsV1alpha1KafkaTrigger.compress) &&
        Objects.equals(this.flushFrequency, ioArgoprojEventsV1alpha1KafkaTrigger.flushFrequency) &&
        Objects.equals(this.parameters, ioArgoprojEventsV1alpha1KafkaTrigger.parameters) &&
        Objects.equals(this.partition, ioArgoprojEventsV1alpha1KafkaTrigger.partition) &&
        Objects.equals(this.partitioningKey, ioArgoprojEventsV1alpha1KafkaTrigger.partitioningKey) &&
        Objects.equals(this.payload, ioArgoprojEventsV1alpha1KafkaTrigger.payload) &&
        Objects.equals(this.requiredAcks, ioArgoprojEventsV1alpha1KafkaTrigger.requiredAcks) &&
        Objects.equals(this.sasl, ioArgoprojEventsV1alpha1KafkaTrigger.sasl) &&
        Objects.equals(this.tls, ioArgoprojEventsV1alpha1KafkaTrigger.tls) &&
        Objects.equals(this.topic, ioArgoprojEventsV1alpha1KafkaTrigger.topic) &&
        Objects.equals(this.url, ioArgoprojEventsV1alpha1KafkaTrigger.url) &&
        Objects.equals(this.version, ioArgoprojEventsV1alpha1KafkaTrigger.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(compress, flushFrequency, parameters, partition, partitioningKey, payload, requiredAcks, sasl, tls, topic, url, version);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1KafkaTrigger {\n");
    
    sb.append("    compress: ").append(toIndentedString(compress)).append("\n");
    sb.append("    flushFrequency: ").append(toIndentedString(flushFrequency)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    partition: ").append(toIndentedString(partition)).append("\n");
    sb.append("    partitioningKey: ").append(toIndentedString(partitioningKey)).append("\n");
    sb.append("    payload: ").append(toIndentedString(payload)).append("\n");
    sb.append("    requiredAcks: ").append(toIndentedString(requiredAcks)).append("\n");
    sb.append("    sasl: ").append(toIndentedString(sasl)).append("\n");
    sb.append("    tls: ").append(toIndentedString(tls)).append("\n");
    sb.append("    topic: ").append(toIndentedString(topic)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

