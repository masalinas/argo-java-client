/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * IoArgoprojEventsV1alpha1GitRemoteConfig
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojEventsV1alpha1GitRemoteConfig {
  @SerializedName("name")
  private String name = null;

  @SerializedName("urls")
  private List<String> urls = null;

  public IoArgoprojEventsV1alpha1GitRemoteConfig name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the remote to fetch from.
   * @return name
  **/
  @ApiModelProperty(value = "Name of the remote to fetch from.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IoArgoprojEventsV1alpha1GitRemoteConfig urls(List<String> urls) {
    this.urls = urls;
    return this;
  }

  public IoArgoprojEventsV1alpha1GitRemoteConfig addUrlsItem(String urlsItem) {
    if (this.urls == null) {
      this.urls = new ArrayList<String>();
    }
    this.urls.add(urlsItem);
    return this;
  }

   /**
   * URLs the URLs of a remote repository. It must be non-empty. Fetch will always use the first URL, while push will use all of them.
   * @return urls
  **/
  @ApiModelProperty(value = "URLs the URLs of a remote repository. It must be non-empty. Fetch will always use the first URL, while push will use all of them.")
  public List<String> getUrls() {
    return urls;
  }

  public void setUrls(List<String> urls) {
    this.urls = urls;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1GitRemoteConfig ioArgoprojEventsV1alpha1GitRemoteConfig = (IoArgoprojEventsV1alpha1GitRemoteConfig) o;
    return Objects.equals(this.name, ioArgoprojEventsV1alpha1GitRemoteConfig.name) &&
        Objects.equals(this.urls, ioArgoprojEventsV1alpha1GitRemoteConfig.urls);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, urls);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1GitRemoteConfig {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    urls: ").append(toIndentedString(urls)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

