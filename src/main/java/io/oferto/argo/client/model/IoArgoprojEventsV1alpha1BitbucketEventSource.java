/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1BitbucketAuth;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1BitbucketRepository;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1EventSourceFilter;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1WebhookContext;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * IoArgoprojEventsV1alpha1BitbucketEventSource
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojEventsV1alpha1BitbucketEventSource {
  @SerializedName("auth")
  private IoArgoprojEventsV1alpha1BitbucketAuth auth = null;

  @SerializedName("deleteHookOnFinish")
  private Boolean deleteHookOnFinish = null;

  @SerializedName("events")
  private List<String> events = null;

  @SerializedName("filter")
  private IoArgoprojEventsV1alpha1EventSourceFilter filter = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("owner")
  private String owner = null;

  @SerializedName("projectKey")
  private String projectKey = null;

  @SerializedName("repositories")
  private List<IoArgoprojEventsV1alpha1BitbucketRepository> repositories = null;

  @SerializedName("repositorySlug")
  private String repositorySlug = null;

  @SerializedName("webhook")
  private IoArgoprojEventsV1alpha1WebhookContext webhook = null;

  public IoArgoprojEventsV1alpha1BitbucketEventSource auth(IoArgoprojEventsV1alpha1BitbucketAuth auth) {
    this.auth = auth;
    return this;
  }

   /**
   * Auth information required to connect to Bitbucket.
   * @return auth
  **/
  @ApiModelProperty(value = "Auth information required to connect to Bitbucket.")
  public IoArgoprojEventsV1alpha1BitbucketAuth getAuth() {
    return auth;
  }

  public void setAuth(IoArgoprojEventsV1alpha1BitbucketAuth auth) {
    this.auth = auth;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource deleteHookOnFinish(Boolean deleteHookOnFinish) {
    this.deleteHookOnFinish = deleteHookOnFinish;
    return this;
  }

   /**
   * Get deleteHookOnFinish
   * @return deleteHookOnFinish
  **/
  @ApiModelProperty(value = "")
  public Boolean isDeleteHookOnFinish() {
    return deleteHookOnFinish;
  }

  public void setDeleteHookOnFinish(Boolean deleteHookOnFinish) {
    this.deleteHookOnFinish = deleteHookOnFinish;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource events(List<String> events) {
    this.events = events;
    return this;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource addEventsItem(String eventsItem) {
    if (this.events == null) {
      this.events = new ArrayList<String>();
    }
    this.events.add(eventsItem);
    return this;
  }

   /**
   * Events this webhook is subscribed to.
   * @return events
  **/
  @ApiModelProperty(value = "Events this webhook is subscribed to.")
  public List<String> getEvents() {
    return events;
  }

  public void setEvents(List<String> events) {
    this.events = events;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource filter(IoArgoprojEventsV1alpha1EventSourceFilter filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1EventSourceFilter getFilter() {
    return filter;
  }

  public void setFilter(IoArgoprojEventsV1alpha1EventSourceFilter filter) {
    this.filter = filter;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource owner(String owner) {
    this.owner = owner;
    return this;
  }

   /**
   * Get owner
   * @return owner
  **/
  @ApiModelProperty(value = "")
  public String getOwner() {
    return owner;
  }

  public void setOwner(String owner) {
    this.owner = owner;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource projectKey(String projectKey) {
    this.projectKey = projectKey;
    return this;
  }

   /**
   * Get projectKey
   * @return projectKey
  **/
  @ApiModelProperty(value = "")
  public String getProjectKey() {
    return projectKey;
  }

  public void setProjectKey(String projectKey) {
    this.projectKey = projectKey;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource repositories(List<IoArgoprojEventsV1alpha1BitbucketRepository> repositories) {
    this.repositories = repositories;
    return this;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource addRepositoriesItem(IoArgoprojEventsV1alpha1BitbucketRepository repositoriesItem) {
    if (this.repositories == null) {
      this.repositories = new ArrayList<IoArgoprojEventsV1alpha1BitbucketRepository>();
    }
    this.repositories.add(repositoriesItem);
    return this;
  }

   /**
   * Get repositories
   * @return repositories
  **/
  @ApiModelProperty(value = "")
  public List<IoArgoprojEventsV1alpha1BitbucketRepository> getRepositories() {
    return repositories;
  }

  public void setRepositories(List<IoArgoprojEventsV1alpha1BitbucketRepository> repositories) {
    this.repositories = repositories;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource repositorySlug(String repositorySlug) {
    this.repositorySlug = repositorySlug;
    return this;
  }

   /**
   * Get repositorySlug
   * @return repositorySlug
  **/
  @ApiModelProperty(value = "")
  public String getRepositorySlug() {
    return repositorySlug;
  }

  public void setRepositorySlug(String repositorySlug) {
    this.repositorySlug = repositorySlug;
  }

  public IoArgoprojEventsV1alpha1BitbucketEventSource webhook(IoArgoprojEventsV1alpha1WebhookContext webhook) {
    this.webhook = webhook;
    return this;
  }

   /**
   * Get webhook
   * @return webhook
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1WebhookContext getWebhook() {
    return webhook;
  }

  public void setWebhook(IoArgoprojEventsV1alpha1WebhookContext webhook) {
    this.webhook = webhook;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1BitbucketEventSource ioArgoprojEventsV1alpha1BitbucketEventSource = (IoArgoprojEventsV1alpha1BitbucketEventSource) o;
    return Objects.equals(this.auth, ioArgoprojEventsV1alpha1BitbucketEventSource.auth) &&
        Objects.equals(this.deleteHookOnFinish, ioArgoprojEventsV1alpha1BitbucketEventSource.deleteHookOnFinish) &&
        Objects.equals(this.events, ioArgoprojEventsV1alpha1BitbucketEventSource.events) &&
        Objects.equals(this.filter, ioArgoprojEventsV1alpha1BitbucketEventSource.filter) &&
        Objects.equals(this.metadata, ioArgoprojEventsV1alpha1BitbucketEventSource.metadata) &&
        Objects.equals(this.owner, ioArgoprojEventsV1alpha1BitbucketEventSource.owner) &&
        Objects.equals(this.projectKey, ioArgoprojEventsV1alpha1BitbucketEventSource.projectKey) &&
        Objects.equals(this.repositories, ioArgoprojEventsV1alpha1BitbucketEventSource.repositories) &&
        Objects.equals(this.repositorySlug, ioArgoprojEventsV1alpha1BitbucketEventSource.repositorySlug) &&
        Objects.equals(this.webhook, ioArgoprojEventsV1alpha1BitbucketEventSource.webhook);
  }

  @Override
  public int hashCode() {
    return Objects.hash(auth, deleteHookOnFinish, events, filter, metadata, owner, projectKey, repositories, repositorySlug, webhook);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1BitbucketEventSource {\n");
    
    sb.append("    auth: ").append(toIndentedString(auth)).append("\n");
    sb.append("    deleteHookOnFinish: ").append(toIndentedString(deleteHookOnFinish)).append("\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    owner: ").append(toIndentedString(owner)).append("\n");
    sb.append("    projectKey: ").append(toIndentedString(projectKey)).append("\n");
    sb.append("    repositories: ").append(toIndentedString(repositories)).append("\n");
    sb.append("    repositorySlug: ").append(toIndentedString(repositorySlug)).append("\n");
    sb.append("    webhook: ").append(toIndentedString(webhook)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

