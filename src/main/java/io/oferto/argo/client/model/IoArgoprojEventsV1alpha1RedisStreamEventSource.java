/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1EventSourceFilter;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1TLSConfig;
import io.oferto.argo.client.model.IoK8sApiCoreV1SecretKeySelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * IoArgoprojEventsV1alpha1RedisStreamEventSource
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojEventsV1alpha1RedisStreamEventSource {
  @SerializedName("consumerGroup")
  private String consumerGroup = null;

  @SerializedName("db")
  private Integer db = null;

  @SerializedName("filter")
  private IoArgoprojEventsV1alpha1EventSourceFilter filter = null;

  @SerializedName("hostAddress")
  private String hostAddress = null;

  @SerializedName("maxMsgCountPerRead")
  private Integer maxMsgCountPerRead = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  @SerializedName("password")
  private IoK8sApiCoreV1SecretKeySelector password = null;

  @SerializedName("streams")
  private List<String> streams = null;

  @SerializedName("tls")
  private IoArgoprojEventsV1alpha1TLSConfig tls = null;

  @SerializedName("username")
  private String username = null;

  public IoArgoprojEventsV1alpha1RedisStreamEventSource consumerGroup(String consumerGroup) {
    this.consumerGroup = consumerGroup;
    return this;
  }

   /**
   * Get consumerGroup
   * @return consumerGroup
  **/
  @ApiModelProperty(value = "")
  public String getConsumerGroup() {
    return consumerGroup;
  }

  public void setConsumerGroup(String consumerGroup) {
    this.consumerGroup = consumerGroup;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource db(Integer db) {
    this.db = db;
    return this;
  }

   /**
   * Get db
   * @return db
  **/
  @ApiModelProperty(value = "")
  public Integer getDb() {
    return db;
  }

  public void setDb(Integer db) {
    this.db = db;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource filter(IoArgoprojEventsV1alpha1EventSourceFilter filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1EventSourceFilter getFilter() {
    return filter;
  }

  public void setFilter(IoArgoprojEventsV1alpha1EventSourceFilter filter) {
    this.filter = filter;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource hostAddress(String hostAddress) {
    this.hostAddress = hostAddress;
    return this;
  }

   /**
   * Get hostAddress
   * @return hostAddress
  **/
  @ApiModelProperty(value = "")
  public String getHostAddress() {
    return hostAddress;
  }

  public void setHostAddress(String hostAddress) {
    this.hostAddress = hostAddress;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource maxMsgCountPerRead(Integer maxMsgCountPerRead) {
    this.maxMsgCountPerRead = maxMsgCountPerRead;
    return this;
  }

   /**
   * Get maxMsgCountPerRead
   * @return maxMsgCountPerRead
  **/
  @ApiModelProperty(value = "")
  public Integer getMaxMsgCountPerRead() {
    return maxMsgCountPerRead;
  }

  public void setMaxMsgCountPerRead(Integer maxMsgCountPerRead) {
    this.maxMsgCountPerRead = maxMsgCountPerRead;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource password(IoK8sApiCoreV1SecretKeySelector password) {
    this.password = password;
    return this;
  }

   /**
   * Get password
   * @return password
  **/
  @ApiModelProperty(value = "")
  public IoK8sApiCoreV1SecretKeySelector getPassword() {
    return password;
  }

  public void setPassword(IoK8sApiCoreV1SecretKeySelector password) {
    this.password = password;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource streams(List<String> streams) {
    this.streams = streams;
    return this;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource addStreamsItem(String streamsItem) {
    if (this.streams == null) {
      this.streams = new ArrayList<String>();
    }
    this.streams.add(streamsItem);
    return this;
  }

   /**
   * Streams to look for entries. XREADGROUP is used on all streams using a single consumer group.
   * @return streams
  **/
  @ApiModelProperty(value = "Streams to look for entries. XREADGROUP is used on all streams using a single consumer group.")
  public List<String> getStreams() {
    return streams;
  }

  public void setStreams(List<String> streams) {
    this.streams = streams;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource tls(IoArgoprojEventsV1alpha1TLSConfig tls) {
    this.tls = tls;
    return this;
  }

   /**
   * Get tls
   * @return tls
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1TLSConfig getTls() {
    return tls;
  }

  public void setTls(IoArgoprojEventsV1alpha1TLSConfig tls) {
    this.tls = tls;
  }

  public IoArgoprojEventsV1alpha1RedisStreamEventSource username(String username) {
    this.username = username;
    return this;
  }

   /**
   * Get username
   * @return username
  **/
  @ApiModelProperty(value = "")
  public String getUsername() {
    return username;
  }

  public void setUsername(String username) {
    this.username = username;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1RedisStreamEventSource ioArgoprojEventsV1alpha1RedisStreamEventSource = (IoArgoprojEventsV1alpha1RedisStreamEventSource) o;
    return Objects.equals(this.consumerGroup, ioArgoprojEventsV1alpha1RedisStreamEventSource.consumerGroup) &&
        Objects.equals(this.db, ioArgoprojEventsV1alpha1RedisStreamEventSource.db) &&
        Objects.equals(this.filter, ioArgoprojEventsV1alpha1RedisStreamEventSource.filter) &&
        Objects.equals(this.hostAddress, ioArgoprojEventsV1alpha1RedisStreamEventSource.hostAddress) &&
        Objects.equals(this.maxMsgCountPerRead, ioArgoprojEventsV1alpha1RedisStreamEventSource.maxMsgCountPerRead) &&
        Objects.equals(this.metadata, ioArgoprojEventsV1alpha1RedisStreamEventSource.metadata) &&
        Objects.equals(this.password, ioArgoprojEventsV1alpha1RedisStreamEventSource.password) &&
        Objects.equals(this.streams, ioArgoprojEventsV1alpha1RedisStreamEventSource.streams) &&
        Objects.equals(this.tls, ioArgoprojEventsV1alpha1RedisStreamEventSource.tls) &&
        Objects.equals(this.username, ioArgoprojEventsV1alpha1RedisStreamEventSource.username);
  }

  @Override
  public int hashCode() {
    return Objects.hash(consumerGroup, db, filter, hostAddress, maxMsgCountPerRead, metadata, password, streams, tls, username);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1RedisStreamEventSource {\n");
    
    sb.append("    consumerGroup: ").append(toIndentedString(consumerGroup)).append("\n");
    sb.append("    db: ").append(toIndentedString(db)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    hostAddress: ").append(toIndentedString(hostAddress)).append("\n");
    sb.append("    maxMsgCountPerRead: ").append(toIndentedString(maxMsgCountPerRead)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    password: ").append(toIndentedString(password)).append("\n");
    sb.append("    streams: ").append(toIndentedString(streams)).append("\n");
    sb.append("    tls: ").append(toIndentedString(tls)).append("\n");
    sb.append("    username: ").append(toIndentedString(username)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

