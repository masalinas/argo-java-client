/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1AWSLambdaTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1ArgoWorkflowTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1AzureEventHubsTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1ConditionsResetCriteria;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1CustomTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1HTTPTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1KafkaTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1LogTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1NATSTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1OpenWhiskTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1PulsarTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1SlackTrigger;
import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1StandardK8STrigger;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * TriggerTemplate is the template that describes trigger specification.
 */
@ApiModel(description = "TriggerTemplate is the template that describes trigger specification.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojEventsV1alpha1TriggerTemplate {
  @SerializedName("argoWorkflow")
  private IoArgoprojEventsV1alpha1ArgoWorkflowTrigger argoWorkflow = null;

  @SerializedName("awsLambda")
  private IoArgoprojEventsV1alpha1AWSLambdaTrigger awsLambda = null;

  @SerializedName("azureEventHubs")
  private IoArgoprojEventsV1alpha1AzureEventHubsTrigger azureEventHubs = null;

  @SerializedName("conditions")
  private String conditions = null;

  @SerializedName("conditionsReset")
  private List<IoArgoprojEventsV1alpha1ConditionsResetCriteria> conditionsReset = null;

  @SerializedName("custom")
  private IoArgoprojEventsV1alpha1CustomTrigger custom = null;

  @SerializedName("http")
  private IoArgoprojEventsV1alpha1HTTPTrigger http = null;

  @SerializedName("k8s")
  private IoArgoprojEventsV1alpha1StandardK8STrigger k8s = null;

  @SerializedName("kafka")
  private IoArgoprojEventsV1alpha1KafkaTrigger kafka = null;

  @SerializedName("log")
  private IoArgoprojEventsV1alpha1LogTrigger log = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("nats")
  private IoArgoprojEventsV1alpha1NATSTrigger nats = null;

  @SerializedName("openWhisk")
  private IoArgoprojEventsV1alpha1OpenWhiskTrigger openWhisk = null;

  @SerializedName("pulsar")
  private IoArgoprojEventsV1alpha1PulsarTrigger pulsar = null;

  @SerializedName("slack")
  private IoArgoprojEventsV1alpha1SlackTrigger slack = null;

  public IoArgoprojEventsV1alpha1TriggerTemplate argoWorkflow(IoArgoprojEventsV1alpha1ArgoWorkflowTrigger argoWorkflow) {
    this.argoWorkflow = argoWorkflow;
    return this;
  }

   /**
   * Get argoWorkflow
   * @return argoWorkflow
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1ArgoWorkflowTrigger getArgoWorkflow() {
    return argoWorkflow;
  }

  public void setArgoWorkflow(IoArgoprojEventsV1alpha1ArgoWorkflowTrigger argoWorkflow) {
    this.argoWorkflow = argoWorkflow;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate awsLambda(IoArgoprojEventsV1alpha1AWSLambdaTrigger awsLambda) {
    this.awsLambda = awsLambda;
    return this;
  }

   /**
   * Get awsLambda
   * @return awsLambda
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1AWSLambdaTrigger getAwsLambda() {
    return awsLambda;
  }

  public void setAwsLambda(IoArgoprojEventsV1alpha1AWSLambdaTrigger awsLambda) {
    this.awsLambda = awsLambda;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate azureEventHubs(IoArgoprojEventsV1alpha1AzureEventHubsTrigger azureEventHubs) {
    this.azureEventHubs = azureEventHubs;
    return this;
  }

   /**
   * Get azureEventHubs
   * @return azureEventHubs
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1AzureEventHubsTrigger getAzureEventHubs() {
    return azureEventHubs;
  }

  public void setAzureEventHubs(IoArgoprojEventsV1alpha1AzureEventHubsTrigger azureEventHubs) {
    this.azureEventHubs = azureEventHubs;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate conditions(String conditions) {
    this.conditions = conditions;
    return this;
  }

   /**
   * Get conditions
   * @return conditions
  **/
  @ApiModelProperty(value = "")
  public String getConditions() {
    return conditions;
  }

  public void setConditions(String conditions) {
    this.conditions = conditions;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate conditionsReset(List<IoArgoprojEventsV1alpha1ConditionsResetCriteria> conditionsReset) {
    this.conditionsReset = conditionsReset;
    return this;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate addConditionsResetItem(IoArgoprojEventsV1alpha1ConditionsResetCriteria conditionsResetItem) {
    if (this.conditionsReset == null) {
      this.conditionsReset = new ArrayList<IoArgoprojEventsV1alpha1ConditionsResetCriteria>();
    }
    this.conditionsReset.add(conditionsResetItem);
    return this;
  }

   /**
   * Get conditionsReset
   * @return conditionsReset
  **/
  @ApiModelProperty(value = "")
  public List<IoArgoprojEventsV1alpha1ConditionsResetCriteria> getConditionsReset() {
    return conditionsReset;
  }

  public void setConditionsReset(List<IoArgoprojEventsV1alpha1ConditionsResetCriteria> conditionsReset) {
    this.conditionsReset = conditionsReset;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate custom(IoArgoprojEventsV1alpha1CustomTrigger custom) {
    this.custom = custom;
    return this;
  }

   /**
   * Get custom
   * @return custom
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1CustomTrigger getCustom() {
    return custom;
  }

  public void setCustom(IoArgoprojEventsV1alpha1CustomTrigger custom) {
    this.custom = custom;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate http(IoArgoprojEventsV1alpha1HTTPTrigger http) {
    this.http = http;
    return this;
  }

   /**
   * Get http
   * @return http
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1HTTPTrigger getHttp() {
    return http;
  }

  public void setHttp(IoArgoprojEventsV1alpha1HTTPTrigger http) {
    this.http = http;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate k8s(IoArgoprojEventsV1alpha1StandardK8STrigger k8s) {
    this.k8s = k8s;
    return this;
  }

   /**
   * Get k8s
   * @return k8s
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1StandardK8STrigger getK8s() {
    return k8s;
  }

  public void setK8s(IoArgoprojEventsV1alpha1StandardK8STrigger k8s) {
    this.k8s = k8s;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate kafka(IoArgoprojEventsV1alpha1KafkaTrigger kafka) {
    this.kafka = kafka;
    return this;
  }

   /**
   * Kafka refers to the trigger designed to place messages on Kafka topic. +optional.
   * @return kafka
  **/
  @ApiModelProperty(value = "Kafka refers to the trigger designed to place messages on Kafka topic. +optional.")
  public IoArgoprojEventsV1alpha1KafkaTrigger getKafka() {
    return kafka;
  }

  public void setKafka(IoArgoprojEventsV1alpha1KafkaTrigger kafka) {
    this.kafka = kafka;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate log(IoArgoprojEventsV1alpha1LogTrigger log) {
    this.log = log;
    return this;
  }

   /**
   * Get log
   * @return log
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1LogTrigger getLog() {
    return log;
  }

  public void setLog(IoArgoprojEventsV1alpha1LogTrigger log) {
    this.log = log;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name is a unique name of the action to take.
   * @return name
  **/
  @ApiModelProperty(value = "Name is a unique name of the action to take.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate nats(IoArgoprojEventsV1alpha1NATSTrigger nats) {
    this.nats = nats;
    return this;
  }

   /**
   * NATS refers to the trigger designed to place message on NATS subject. +optional.
   * @return nats
  **/
  @ApiModelProperty(value = "NATS refers to the trigger designed to place message on NATS subject. +optional.")
  public IoArgoprojEventsV1alpha1NATSTrigger getNats() {
    return nats;
  }

  public void setNats(IoArgoprojEventsV1alpha1NATSTrigger nats) {
    this.nats = nats;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate openWhisk(IoArgoprojEventsV1alpha1OpenWhiskTrigger openWhisk) {
    this.openWhisk = openWhisk;
    return this;
  }

   /**
   * Get openWhisk
   * @return openWhisk
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1OpenWhiskTrigger getOpenWhisk() {
    return openWhisk;
  }

  public void setOpenWhisk(IoArgoprojEventsV1alpha1OpenWhiskTrigger openWhisk) {
    this.openWhisk = openWhisk;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate pulsar(IoArgoprojEventsV1alpha1PulsarTrigger pulsar) {
    this.pulsar = pulsar;
    return this;
  }

   /**
   * Get pulsar
   * @return pulsar
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1PulsarTrigger getPulsar() {
    return pulsar;
  }

  public void setPulsar(IoArgoprojEventsV1alpha1PulsarTrigger pulsar) {
    this.pulsar = pulsar;
  }

  public IoArgoprojEventsV1alpha1TriggerTemplate slack(IoArgoprojEventsV1alpha1SlackTrigger slack) {
    this.slack = slack;
    return this;
  }

   /**
   * Get slack
   * @return slack
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1SlackTrigger getSlack() {
    return slack;
  }

  public void setSlack(IoArgoprojEventsV1alpha1SlackTrigger slack) {
    this.slack = slack;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1TriggerTemplate ioArgoprojEventsV1alpha1TriggerTemplate = (IoArgoprojEventsV1alpha1TriggerTemplate) o;
    return Objects.equals(this.argoWorkflow, ioArgoprojEventsV1alpha1TriggerTemplate.argoWorkflow) &&
        Objects.equals(this.awsLambda, ioArgoprojEventsV1alpha1TriggerTemplate.awsLambda) &&
        Objects.equals(this.azureEventHubs, ioArgoprojEventsV1alpha1TriggerTemplate.azureEventHubs) &&
        Objects.equals(this.conditions, ioArgoprojEventsV1alpha1TriggerTemplate.conditions) &&
        Objects.equals(this.conditionsReset, ioArgoprojEventsV1alpha1TriggerTemplate.conditionsReset) &&
        Objects.equals(this.custom, ioArgoprojEventsV1alpha1TriggerTemplate.custom) &&
        Objects.equals(this.http, ioArgoprojEventsV1alpha1TriggerTemplate.http) &&
        Objects.equals(this.k8s, ioArgoprojEventsV1alpha1TriggerTemplate.k8s) &&
        Objects.equals(this.kafka, ioArgoprojEventsV1alpha1TriggerTemplate.kafka) &&
        Objects.equals(this.log, ioArgoprojEventsV1alpha1TriggerTemplate.log) &&
        Objects.equals(this.name, ioArgoprojEventsV1alpha1TriggerTemplate.name) &&
        Objects.equals(this.nats, ioArgoprojEventsV1alpha1TriggerTemplate.nats) &&
        Objects.equals(this.openWhisk, ioArgoprojEventsV1alpha1TriggerTemplate.openWhisk) &&
        Objects.equals(this.pulsar, ioArgoprojEventsV1alpha1TriggerTemplate.pulsar) &&
        Objects.equals(this.slack, ioArgoprojEventsV1alpha1TriggerTemplate.slack);
  }

  @Override
  public int hashCode() {
    return Objects.hash(argoWorkflow, awsLambda, azureEventHubs, conditions, conditionsReset, custom, http, k8s, kafka, log, name, nats, openWhisk, pulsar, slack);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1TriggerTemplate {\n");
    
    sb.append("    argoWorkflow: ").append(toIndentedString(argoWorkflow)).append("\n");
    sb.append("    awsLambda: ").append(toIndentedString(awsLambda)).append("\n");
    sb.append("    azureEventHubs: ").append(toIndentedString(azureEventHubs)).append("\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    conditionsReset: ").append(toIndentedString(conditionsReset)).append("\n");
    sb.append("    custom: ").append(toIndentedString(custom)).append("\n");
    sb.append("    http: ").append(toIndentedString(http)).append("\n");
    sb.append("    k8s: ").append(toIndentedString(k8s)).append("\n");
    sb.append("    kafka: ").append(toIndentedString(kafka)).append("\n");
    sb.append("    log: ").append(toIndentedString(log)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    nats: ").append(toIndentedString(nats)).append("\n");
    sb.append("    openWhisk: ").append(toIndentedString(openWhisk)).append("\n");
    sb.append("    pulsar: ").append(toIndentedString(pulsar)).append("\n");
    sb.append("    slack: ").append(toIndentedString(slack)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

