/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Arguments;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1ContinueOn;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Item;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1LifecycleHook;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Sequence;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1Template;
import io.oferto.argo.client.model.IoArgoprojWorkflowV1alpha1TemplateRef;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * WorkflowStep is a reference to a template to execute in a series of step
 */
@ApiModel(description = "WorkflowStep is a reference to a template to execute in a series of step")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojWorkflowV1alpha1WorkflowStep {
  @SerializedName("arguments")
  private IoArgoprojWorkflowV1alpha1Arguments arguments = null;

  @SerializedName("continueOn")
  private IoArgoprojWorkflowV1alpha1ContinueOn continueOn = null;

  @SerializedName("hooks")
  private Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> hooks = null;

  @SerializedName("inline")
  private IoArgoprojWorkflowV1alpha1Template inline = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("onExit")
  private String onExit = null;

  @SerializedName("template")
  private String template = null;

  @SerializedName("templateRef")
  private IoArgoprojWorkflowV1alpha1TemplateRef templateRef = null;

  @SerializedName("when")
  private String when = null;

  @SerializedName("withItems")
  private List<IoArgoprojWorkflowV1alpha1Item> withItems = null;

  @SerializedName("withParam")
  private String withParam = null;

  @SerializedName("withSequence")
  private IoArgoprojWorkflowV1alpha1Sequence withSequence = null;

  public IoArgoprojWorkflowV1alpha1WorkflowStep arguments(IoArgoprojWorkflowV1alpha1Arguments arguments) {
    this.arguments = arguments;
    return this;
  }

   /**
   * Arguments hold arguments to the template
   * @return arguments
  **/
  @ApiModelProperty(value = "Arguments hold arguments to the template")
  public IoArgoprojWorkflowV1alpha1Arguments getArguments() {
    return arguments;
  }

  public void setArguments(IoArgoprojWorkflowV1alpha1Arguments arguments) {
    this.arguments = arguments;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep continueOn(IoArgoprojWorkflowV1alpha1ContinueOn continueOn) {
    this.continueOn = continueOn;
    return this;
  }

   /**
   * ContinueOn makes argo to proceed with the following step even if this step fails. Errors and Failed states can be specified
   * @return continueOn
  **/
  @ApiModelProperty(value = "ContinueOn makes argo to proceed with the following step even if this step fails. Errors and Failed states can be specified")
  public IoArgoprojWorkflowV1alpha1ContinueOn getContinueOn() {
    return continueOn;
  }

  public void setContinueOn(IoArgoprojWorkflowV1alpha1ContinueOn continueOn) {
    this.continueOn = continueOn;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep hooks(Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> hooks) {
    this.hooks = hooks;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep putHooksItem(String key, IoArgoprojWorkflowV1alpha1LifecycleHook hooksItem) {
    if (this.hooks == null) {
      this.hooks = new HashMap<String, IoArgoprojWorkflowV1alpha1LifecycleHook>();
    }
    this.hooks.put(key, hooksItem);
    return this;
  }

   /**
   * Hooks holds the lifecycle hook which is invoked at lifecycle of step, irrespective of the success, failure, or error status of the primary step
   * @return hooks
  **/
  @ApiModelProperty(value = "Hooks holds the lifecycle hook which is invoked at lifecycle of step, irrespective of the success, failure, or error status of the primary step")
  public Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> getHooks() {
    return hooks;
  }

  public void setHooks(Map<String, IoArgoprojWorkflowV1alpha1LifecycleHook> hooks) {
    this.hooks = hooks;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep inline(IoArgoprojWorkflowV1alpha1Template inline) {
    this.inline = inline;
    return this;
  }

   /**
   * Inline is the template. Template must be empty if this is declared (and vice-versa).
   * @return inline
  **/
  @ApiModelProperty(value = "Inline is the template. Template must be empty if this is declared (and vice-versa).")
  public IoArgoprojWorkflowV1alpha1Template getInline() {
    return inline;
  }

  public void setInline(IoArgoprojWorkflowV1alpha1Template inline) {
    this.inline = inline;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the step
   * @return name
  **/
  @ApiModelProperty(value = "Name of the step")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep onExit(String onExit) {
    this.onExit = onExit;
    return this;
  }

   /**
   * OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template. DEPRECATED: Use Hooks[exit].Template instead.
   * @return onExit
  **/
  @ApiModelProperty(value = "OnExit is a template reference which is invoked at the end of the template, irrespective of the success, failure, or error of the primary template. DEPRECATED: Use Hooks[exit].Template instead.")
  public String getOnExit() {
    return onExit;
  }

  public void setOnExit(String onExit) {
    this.onExit = onExit;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep template(String template) {
    this.template = template;
    return this;
  }

   /**
   * Template is the name of the template to execute as the step
   * @return template
  **/
  @ApiModelProperty(value = "Template is the name of the template to execute as the step")
  public String getTemplate() {
    return template;
  }

  public void setTemplate(String template) {
    this.template = template;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep templateRef(IoArgoprojWorkflowV1alpha1TemplateRef templateRef) {
    this.templateRef = templateRef;
    return this;
  }

   /**
   * TemplateRef is the reference to the template resource to execute as the step.
   * @return templateRef
  **/
  @ApiModelProperty(value = "TemplateRef is the reference to the template resource to execute as the step.")
  public IoArgoprojWorkflowV1alpha1TemplateRef getTemplateRef() {
    return templateRef;
  }

  public void setTemplateRef(IoArgoprojWorkflowV1alpha1TemplateRef templateRef) {
    this.templateRef = templateRef;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep when(String when) {
    this.when = when;
    return this;
  }

   /**
   * When is an expression in which the step should conditionally execute
   * @return when
  **/
  @ApiModelProperty(value = "When is an expression in which the step should conditionally execute")
  public String getWhen() {
    return when;
  }

  public void setWhen(String when) {
    this.when = when;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep withItems(List<IoArgoprojWorkflowV1alpha1Item> withItems) {
    this.withItems = withItems;
    return this;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep addWithItemsItem(IoArgoprojWorkflowV1alpha1Item withItemsItem) {
    if (this.withItems == null) {
      this.withItems = new ArrayList<IoArgoprojWorkflowV1alpha1Item>();
    }
    this.withItems.add(withItemsItem);
    return this;
  }

   /**
   * WithItems expands a step into multiple parallel steps from the items in the list
   * @return withItems
  **/
  @ApiModelProperty(value = "WithItems expands a step into multiple parallel steps from the items in the list")
  public List<IoArgoprojWorkflowV1alpha1Item> getWithItems() {
    return withItems;
  }

  public void setWithItems(List<IoArgoprojWorkflowV1alpha1Item> withItems) {
    this.withItems = withItems;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep withParam(String withParam) {
    this.withParam = withParam;
    return this;
  }

   /**
   * WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.
   * @return withParam
  **/
  @ApiModelProperty(value = "WithParam expands a step into multiple parallel steps from the value in the parameter, which is expected to be a JSON list.")
  public String getWithParam() {
    return withParam;
  }

  public void setWithParam(String withParam) {
    this.withParam = withParam;
  }

  public IoArgoprojWorkflowV1alpha1WorkflowStep withSequence(IoArgoprojWorkflowV1alpha1Sequence withSequence) {
    this.withSequence = withSequence;
    return this;
  }

   /**
   * WithSequence expands a step into a numeric sequence
   * @return withSequence
  **/
  @ApiModelProperty(value = "WithSequence expands a step into a numeric sequence")
  public IoArgoprojWorkflowV1alpha1Sequence getWithSequence() {
    return withSequence;
  }

  public void setWithSequence(IoArgoprojWorkflowV1alpha1Sequence withSequence) {
    this.withSequence = withSequence;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojWorkflowV1alpha1WorkflowStep ioArgoprojWorkflowV1alpha1WorkflowStep = (IoArgoprojWorkflowV1alpha1WorkflowStep) o;
    return Objects.equals(this.arguments, ioArgoprojWorkflowV1alpha1WorkflowStep.arguments) &&
        Objects.equals(this.continueOn, ioArgoprojWorkflowV1alpha1WorkflowStep.continueOn) &&
        Objects.equals(this.hooks, ioArgoprojWorkflowV1alpha1WorkflowStep.hooks) &&
        Objects.equals(this.inline, ioArgoprojWorkflowV1alpha1WorkflowStep.inline) &&
        Objects.equals(this.name, ioArgoprojWorkflowV1alpha1WorkflowStep.name) &&
        Objects.equals(this.onExit, ioArgoprojWorkflowV1alpha1WorkflowStep.onExit) &&
        Objects.equals(this.template, ioArgoprojWorkflowV1alpha1WorkflowStep.template) &&
        Objects.equals(this.templateRef, ioArgoprojWorkflowV1alpha1WorkflowStep.templateRef) &&
        Objects.equals(this.when, ioArgoprojWorkflowV1alpha1WorkflowStep.when) &&
        Objects.equals(this.withItems, ioArgoprojWorkflowV1alpha1WorkflowStep.withItems) &&
        Objects.equals(this.withParam, ioArgoprojWorkflowV1alpha1WorkflowStep.withParam) &&
        Objects.equals(this.withSequence, ioArgoprojWorkflowV1alpha1WorkflowStep.withSequence);
  }

  @Override
  public int hashCode() {
    return Objects.hash(arguments, continueOn, hooks, inline, name, onExit, template, templateRef, when, withItems, withParam, withSequence);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojWorkflowV1alpha1WorkflowStep {\n");
    
    sb.append("    arguments: ").append(toIndentedString(arguments)).append("\n");
    sb.append("    continueOn: ").append(toIndentedString(continueOn)).append("\n");
    sb.append("    hooks: ").append(toIndentedString(hooks)).append("\n");
    sb.append("    inline: ").append(toIndentedString(inline)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    onExit: ").append(toIndentedString(onExit)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    templateRef: ").append(toIndentedString(templateRef)).append("\n");
    sb.append("    when: ").append(toIndentedString(when)).append("\n");
    sb.append("    withItems: ").append(toIndentedString(withItems)).append("\n");
    sb.append("    withParam: ").append(toIndentedString(withParam)).append("\n");
    sb.append("    withSequence: ").append(toIndentedString(withSequence)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

