/*
 * Argo Workflows API
 * Argo Workflows is an open source container-native workflow engine for orchestrating parallel jobs on Kubernetes. For more information, please see https://argo-workflows.readthedocs.io/en/release-3.5/
 *
 * OpenAPI spec version: VERSION
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.oferto.argo.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import io.oferto.argo.client.model.IoArgoprojEventsV1alpha1BasicAuth;
import io.oferto.argo.client.model.IoK8sApiCoreV1SecretKeySelector;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

import java.io.IOException;

/**
 * IoArgoprojEventsV1alpha1NATSAuth
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-03-17T20:59:50.224Z")
public class IoArgoprojEventsV1alpha1NATSAuth {
  @SerializedName("basic")
  private IoArgoprojEventsV1alpha1BasicAuth basic = null;

  @SerializedName("credential")
  private IoK8sApiCoreV1SecretKeySelector credential = null;

  @SerializedName("nkey")
  private IoK8sApiCoreV1SecretKeySelector nkey = null;

  @SerializedName("token")
  private IoK8sApiCoreV1SecretKeySelector token = null;

  public IoArgoprojEventsV1alpha1NATSAuth basic(IoArgoprojEventsV1alpha1BasicAuth basic) {
    this.basic = basic;
    return this;
  }

   /**
   * Get basic
   * @return basic
  **/
  @ApiModelProperty(value = "")
  public IoArgoprojEventsV1alpha1BasicAuth getBasic() {
    return basic;
  }

  public void setBasic(IoArgoprojEventsV1alpha1BasicAuth basic) {
    this.basic = basic;
  }

  public IoArgoprojEventsV1alpha1NATSAuth credential(IoK8sApiCoreV1SecretKeySelector credential) {
    this.credential = credential;
    return this;
  }

   /**
   * Get credential
   * @return credential
  **/
  @ApiModelProperty(value = "")
  public IoK8sApiCoreV1SecretKeySelector getCredential() {
    return credential;
  }

  public void setCredential(IoK8sApiCoreV1SecretKeySelector credential) {
    this.credential = credential;
  }

  public IoArgoprojEventsV1alpha1NATSAuth nkey(IoK8sApiCoreV1SecretKeySelector nkey) {
    this.nkey = nkey;
    return this;
  }

   /**
   * Get nkey
   * @return nkey
  **/
  @ApiModelProperty(value = "")
  public IoK8sApiCoreV1SecretKeySelector getNkey() {
    return nkey;
  }

  public void setNkey(IoK8sApiCoreV1SecretKeySelector nkey) {
    this.nkey = nkey;
  }

  public IoArgoprojEventsV1alpha1NATSAuth token(IoK8sApiCoreV1SecretKeySelector token) {
    this.token = token;
    return this;
  }

   /**
   * Get token
   * @return token
  **/
  @ApiModelProperty(value = "")
  public IoK8sApiCoreV1SecretKeySelector getToken() {
    return token;
  }

  public void setToken(IoK8sApiCoreV1SecretKeySelector token) {
    this.token = token;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    IoArgoprojEventsV1alpha1NATSAuth ioArgoprojEventsV1alpha1NATSAuth = (IoArgoprojEventsV1alpha1NATSAuth) o;
    return Objects.equals(this.basic, ioArgoprojEventsV1alpha1NATSAuth.basic) &&
        Objects.equals(this.credential, ioArgoprojEventsV1alpha1NATSAuth.credential) &&
        Objects.equals(this.nkey, ioArgoprojEventsV1alpha1NATSAuth.nkey) &&
        Objects.equals(this.token, ioArgoprojEventsV1alpha1NATSAuth.token);
  }

  @Override
  public int hashCode() {
    return Objects.hash(basic, credential, nkey, token);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class IoArgoprojEventsV1alpha1NATSAuth {\n");
    
    sb.append("    basic: ").append(toIndentedString(basic)).append("\n");
    sb.append("    credential: ").append(toIndentedString(credential)).append("\n");
    sb.append("    nkey: ").append(toIndentedString(nkey)).append("\n");
    sb.append("    token: ").append(toIndentedString(token)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

